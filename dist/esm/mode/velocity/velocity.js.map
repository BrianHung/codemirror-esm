{"version":3,"file":"velocity.js","sources":["../../../../src/mode/velocity/velocity.js"],"sourcesContent":["// Source: https://github.com/codemirror/CodeMirror/tree/master/mode/velocity/velocity.js\nexport default function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"velocity\", function() {\n    function parseWords(str) {\n      var obj = {}, words = str.split(\" \");\n      for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n      return obj;\n    }\n\n    var keywords = parseWords(\"#end #else #break #stop #[[ #]] \" +\n                              \"#{end} #{else} #{break} #{stop}\");\n    var functions = parseWords(\"#if #elseif #foreach #set #include #parse #macro #define #evaluate \" +\n                               \"#{if} #{elseif} #{foreach} #{set} #{include} #{parse} #{macro} #{define} #{evaluate}\");\n    var specials = parseWords(\"$foreach.count $foreach.hasNext $foreach.first $foreach.last $foreach.topmost $foreach.parent.count $foreach.parent.hasNext $foreach.parent.first $foreach.parent.last $foreach.parent $velocityCount $!bodyContent $bodyContent\");\n    var isOperatorChar = /[+\\-*&%=<>!?:\\/|]/;\n\n    function chain(stream, state, f) {\n      state.tokenize = f;\n      return f(stream, state);\n    }\n    function tokenBase(stream, state) {\n      var beforeParams = state.beforeParams;\n      state.beforeParams = false;\n      var ch = stream.next();\n      if ((ch == \"'\") && !state.inString && state.inParams) {\n        state.lastTokenWasBuiltin = false;\n        return chain(stream, state, tokenString(ch));\n      }\n      else if ((ch == '\"')) {\n        state.lastTokenWasBuiltin = false;\n        if (state.inString) {\n          state.inString = false;\n          return \"string\";\n        }\n        else if (state.inParams)\n          return chain(stream, state, tokenString(ch));\n      }\n      else if (/[\\[\\]{}\\(\\),;\\.]/.test(ch)) {\n        if (ch == \"(\" && beforeParams)\n          state.inParams = true;\n        else if (ch == \")\") {\n          state.inParams = false;\n          state.lastTokenWasBuiltin = true;\n        }\n        return null;\n      }\n      else if (/\\d/.test(ch)) {\n        state.lastTokenWasBuiltin = false;\n        stream.eatWhile(/[\\w\\.]/);\n        return \"number\";\n      }\n      else if (ch == \"#\" && stream.eat(\"*\")) {\n        state.lastTokenWasBuiltin = false;\n        return chain(stream, state, tokenComment);\n      }\n      else if (ch == \"#\" && stream.match(/ *\\[ *\\[/)) {\n        state.lastTokenWasBuiltin = false;\n        return chain(stream, state, tokenUnparsed);\n      }\n      else if (ch == \"#\" && stream.eat(\"#\")) {\n        state.lastTokenWasBuiltin = false;\n        stream.skipToEnd();\n        return \"comment\";\n      }\n      else if (ch == \"$\") {\n        stream.eatWhile(/[\\w\\d\\$_\\.{}-]/);\n        if (specials && specials.propertyIsEnumerable(stream.current())) {\n          return \"keyword\";\n        }\n        else {\n          state.lastTokenWasBuiltin = true;\n          state.beforeParams = true;\n          return \"builtin\";\n        }\n      }\n      else if (isOperatorChar.test(ch)) {\n        state.lastTokenWasBuiltin = false;\n        stream.eatWhile(isOperatorChar);\n        return \"operator\";\n      }\n      else {\n        stream.eatWhile(/[\\w\\$_{}@]/);\n        var word = stream.current();\n        if (keywords && keywords.propertyIsEnumerable(word))\n          return \"keyword\";\n        if (functions && functions.propertyIsEnumerable(word) ||\n                    (stream.current().match(/^#@?[a-z0-9_]+ *$/i) && stream.peek()==\"(\") &&\n                     !(functions && functions.propertyIsEnumerable(word.toLowerCase()))) {\n          state.beforeParams = true;\n          state.lastTokenWasBuiltin = false;\n          return \"keyword\";\n        }\n        if (state.inString) {\n          state.lastTokenWasBuiltin = false;\n          return \"string\";\n        }\n        if (stream.pos > word.length && stream.string.charAt(stream.pos-word.length-1)==\".\" && state.lastTokenWasBuiltin)\n          return \"builtin\";\n        state.lastTokenWasBuiltin = false;\n        return null;\n      }\n    }\n\n    function tokenString(quote) {\n      return function(stream, state) {\n        var escaped = false, next, end = false;\n        while ((next = stream.next()) != null) {\n          if ((next == quote) && !escaped) {\n            end = true;\n            break;\n          }\n          if (quote=='\"' && stream.peek() == '$' && !escaped) {\n            state.inString = true;\n            end = true;\n            break;\n          }\n          escaped = !escaped && next == \"\\\\\";\n        }\n        if (end) state.tokenize = tokenBase;\n        return \"string\";\n      };\n    }\n\n    function tokenComment(stream, state) {\n      var maybeEnd = false, ch;\n      while (ch = stream.next()) {\n        if (ch == \"#\" && maybeEnd) {\n          state.tokenize = tokenBase;\n          break;\n        }\n        maybeEnd = (ch == \"*\");\n      }\n      return \"comment\";\n    }\n\n    function tokenUnparsed(stream, state) {\n      var maybeEnd = 0, ch;\n      while (ch = stream.next()) {\n        if (ch == \"#\" && maybeEnd == 2) {\n          state.tokenize = tokenBase;\n          break;\n        }\n        if (ch == \"]\")\n          maybeEnd++;\n        else if (ch != \" \")\n          maybeEnd = 0;\n      }\n      return \"meta\";\n    }\n\n    return {\n      startState: function() {\n        return {\n          tokenize: tokenBase,\n          beforeParams: false,\n          inParams: false,\n          inString: false,\n          lastTokenWasBuiltin: false\n        };\n      },\n\n      token: function(stream, state) {\n        if (stream.eatSpace()) return null;\n        return state.tokenize(stream, state);\n      },\n      blockCommentStart: \"#*\",\n      blockCommentEnd: \"*#\",\n      lineComment: \"##\",\n      fold: \"velocity\"\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/velocity\", \"velocity\");\n\n}"],"names":[],"mappings":"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"}