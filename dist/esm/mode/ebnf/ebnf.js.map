{"version":3,"file":"ebnf.js","sources":["../../../../src/mode/ebnf/ebnf.js"],"sourcesContent":["// Source: https://github.com/codemirror/CodeMirror/tree/master/mode/ebnf/ebnf.js\nexport default function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"ebnf\", function (config) {\n    var commentType = {slash: 0, parenthesis: 1};\n    var stateType = {comment: 0, _string: 1, characterClass: 2};\n    var bracesMode = null;\n\n    if (config.bracesMode)\n      bracesMode = CodeMirror.getMode(config, config.bracesMode);\n\n    return {\n      startState: function () {\n        return {\n          stringType: null,\n          commentType: null,\n          braced: 0,\n          lhs: true,\n          localState: null,\n          stack: [],\n          inDefinition: false\n        };\n      },\n      token: function (stream, state) {\n        if (!stream) return;\n\n        if (state.stack.length === 0) {\n          if ((stream.peek() == '\"') || (stream.peek() == \"'\")) {\n            state.stringType = stream.peek();\n            stream.next(); \n            state.stack.unshift(stateType._string);\n          } else if (stream.match(/^\\/\\*/)) { \n            state.stack.unshift(stateType.comment);\n            state.commentType = commentType.slash;\n          } else if (stream.match(/^\\(\\*/)) { \n            state.stack.unshift(stateType.comment);\n            state.commentType = commentType.parenthesis;\n          }\n        }\n\n        switch (state.stack[0]) {\n        case stateType._string:\n          while (state.stack[0] === stateType._string && !stream.eol()) {\n            if (stream.peek() === state.stringType) {\n              stream.next(); \n              state.stack.shift(); \n            } else if (stream.peek() === \"\\\\\") {\n              stream.next();\n              stream.next();\n            } else {\n              stream.match(/^.[^\\\\\\\"\\']*/);\n            }\n          }\n          return state.lhs ? \"property string\" : \"string\"; \n\n        case stateType.comment:\n          while (state.stack[0] === stateType.comment && !stream.eol()) {\n            if (state.commentType === commentType.slash && stream.match(/\\*\\//)) {\n              state.stack.shift(); \n              state.commentType = null;\n            } else if (state.commentType === commentType.parenthesis && stream.match(/\\*\\)/)) {\n              state.stack.shift(); \n              state.commentType = null;\n            } else {\n              stream.match(/^.[^\\*]*/);\n            }\n          }\n          return \"comment\";\n\n        case stateType.characterClass:\n          while (state.stack[0] === stateType.characterClass && !stream.eol()) {\n            if (!(stream.match(/^[^\\]\\\\]+/) || stream.match(/^\\\\./))) {\n              state.stack.shift();\n            }\n          }\n          return \"operator\";\n        }\n\n        var peek = stream.peek();\n\n        if (bracesMode !== null && (state.braced || peek === \"{\")) {\n          if (state.localState === null)\n            state.localState = CodeMirror.startState(bracesMode);\n\n          var token = bracesMode.token(stream, state.localState),\n            text = stream.current();\n\n          if (!token) {\n            for (var i = 0; i < text.length; i++) {\n              if (text[i] === \"{\") {\n                if (state.braced === 0) {\n                  token = \"matchingbracket\";\n                }\n                state.braced++;\n              } else if (text[i] === \"}\") {\n                state.braced--;\n                if (state.braced === 0) {\n                  token = \"matchingbracket\";\n                }\n              }\n            }\n          }\n          return token;\n        }\n\n        switch (peek) {\n        case \"[\":\n          stream.next();\n          state.stack.unshift(stateType.characterClass);\n          return \"bracket\";\n        case \":\":\n        case \"|\":\n        case \";\":\n          stream.next();\n          return \"operator\";\n        case \"%\":\n          if (stream.match(\"%%\")) {\n            return \"header\";\n          } else if (stream.match(/[%][A-Za-z]+/)) {\n            return \"keyword\";\n          } else if (stream.match(/[%][}]/)) {\n            return \"matchingbracket\";\n          }\n          break;\n        case \"/\":\n          if (stream.match(/[\\/][A-Za-z]+/)) {\n            return \"keyword\";\n          }\n        case \"\\\\\":\n          if (stream.match(/[\\][a-z]+/)) {\n            return \"string-2\";\n          }\n        case \".\":\n          if (stream.match(\".\")) {\n            return \"atom\";\n          }\n        case \"*\":\n        case \"-\":\n        case \"+\":\n        case \"^\":\n          if (stream.match(peek)) {\n            return \"atom\";\n          }\n        case \"$\":\n          if (stream.match(\"$$\")) {\n            return \"builtin\";\n          } else if (stream.match(/[$][0-9]+/)) {\n            return \"variable-3\";\n          }\n        case \"<\":\n          if (stream.match(/<<[a-zA-Z_]+>>/)) {\n            return \"builtin\";\n          }\n        }\n\n        if (stream.match(/^\\/\\//)) {\n          stream.skipToEnd();\n          return \"comment\";\n        } else if (stream.match(/return/)) {\n          return \"operator\";\n        } else if (stream.match(/^[a-zA-Z_][a-zA-Z0-9_]*/)) {\n          if (stream.match(/(?=[\\(.])/)) {\n            return \"variable\";\n          } else if (stream.match(/(?=[\\s\\n]*[:=])/)) {\n            return \"def\";\n          }\n          return \"variable-2\";\n        } else if ([\"[\", \"]\", \"(\", \")\"].indexOf(stream.peek()) != -1) {\n          stream.next();\n          return \"bracket\";\n        } else if (!stream.eatSpace()) {\n          stream.next();\n        }\n        return null;\n      }\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-ebnf\", \"ebnf\");\n}"],"names":[],"mappings":"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"}