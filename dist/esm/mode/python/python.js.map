{"version":3,"file":"python.js","sources":["../../../../src/mode/python/python.js"],"sourcesContent":["// Source: https://github.com/codemirror/CodeMirror/tree/master/mode/python/python.js\nexport default function(CodeMirror) {\n  \"use strict\";\n\n  function wordRegexp(words) {\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n  }\n\n  var wordOperators = wordRegexp([\"and\", \"or\", \"not\", \"is\"]);\n  var commonKeywords = [\"as\", \"assert\", \"break\", \"class\", \"continue\",\n    \"def\", \"del\", \"elif\", \"else\", \"except\", \"finally\",\n    \"for\", \"from\", \"global\", \"if\", \"import\",\n    \"lambda\", \"pass\", \"raise\", \"return\",\n    \"try\", \"while\", \"with\", \"yield\", \"in\"];\n  var commonBuiltins = [\"abs\", \"all\", \"any\", \"bin\", \"bool\", \"bytearray\", \"callable\", \"chr\",\n    \"classmethod\", \"compile\", \"complex\", \"delattr\", \"dict\", \"dir\", \"divmod\",\n    \"enumerate\", \"eval\", \"filter\", \"float\", \"format\", \"frozenset\",\n    \"getattr\", \"globals\", \"hasattr\", \"hash\", \"help\", \"hex\", \"id\",\n    \"input\", \"int\", \"isinstance\", \"issubclass\", \"iter\", \"len\",\n    \"list\", \"locals\", \"map\", \"max\", \"memoryview\", \"min\", \"next\",\n    \"object\", \"oct\", \"open\", \"ord\", \"pow\", \"property\", \"range\",\n    \"repr\", \"reversed\", \"round\", \"set\", \"setattr\", \"slice\",\n    \"sorted\", \"staticmethod\", \"str\", \"sum\", \"super\", \"tuple\",\n    \"type\", \"vars\", \"zip\", \"__import__\", \"NotImplemented\",\n    \"Ellipsis\", \"__debug__\"];\n  CodeMirror.registerHelper(\"hintWords\", \"python\", commonKeywords.concat(commonBuiltins));\n\n  function top(state) {\n    return state.scopes[state.scopes.length - 1];\n  }\n\n  CodeMirror.defineMode(\"python\", function(conf, parserConf) {\n    var ERRORCLASS = \"error\";\n\n    var delimiters = parserConf.delimiters || parserConf.singleDelimiters || /^[\\(\\)\\[\\]\\{\\}@,:`=;\\.\\\\]/;\n    var operators = [parserConf.singleOperators, parserConf.doubleOperators, parserConf.doubleDelimiters, parserConf.tripleDelimiters,\n      parserConf.operators || /^([-+*/%\\/&|^]=?|[<>=]+|\\/\\/=?|\\*\\*=?|!=|[~!@]|\\.\\.\\.)/]\n    for (var i = 0; i < operators.length; i++) if (!operators[i]) operators.splice(i--, 1)\n\n    var hangingIndent = parserConf.hangingIndent || conf.indentUnit;\n\n    var myKeywords = commonKeywords, myBuiltins = commonBuiltins;\n    if (parserConf.extra_keywords != undefined)\n      myKeywords = myKeywords.concat(parserConf.extra_keywords);\n\n    if (parserConf.extra_builtins != undefined)\n      myBuiltins = myBuiltins.concat(parserConf.extra_builtins);\n\n    var py3 = !(parserConf.version && Number(parserConf.version) < 3)\n    if (py3) {\n      var identifiers = parserConf.identifiers|| /^[_A-Za-z\\u00A1-\\uFFFF][_A-Za-z0-9\\u00A1-\\uFFFF]*/;\n      myKeywords = myKeywords.concat([\"nonlocal\", \"False\", \"True\", \"None\", \"async\", \"await\"]);\n      myBuiltins = myBuiltins.concat([\"ascii\", \"bytes\", \"exec\", \"print\"]);\n      var stringPrefixes = new RegExp(\"^(([rbuf]|(br)|(fr))?('{3}|\\\"{3}|['\\\"]))\", \"i\");\n    } else {\n      var identifiers = parserConf.identifiers|| /^[_A-Za-z][_A-Za-z0-9]*/;\n      myKeywords = myKeywords.concat([\"exec\", \"print\"]);\n      myBuiltins = myBuiltins.concat([\"apply\", \"basestring\", \"buffer\", \"cmp\", \"coerce\", \"execfile\",\n        \"file\", \"intern\", \"long\", \"raw_input\", \"reduce\", \"reload\",\n        \"unichr\", \"unicode\", \"xrange\", \"False\", \"True\", \"None\"]);\n      var stringPrefixes = new RegExp(\"^(([rubf]|(ur)|(br))?('{3}|\\\"{3}|['\\\"]))\", \"i\");\n    }\n    var keywords = wordRegexp(myKeywords);\n    var builtins = wordRegexp(myBuiltins);\n\n    function tokenBase(stream, state) {\n      var sol = stream.sol() && state.lastToken != \"\\\\\"\n      if (sol) state.indent = stream.indentation()\n      if (sol && top(state).type == \"py\") {\n        var scopeOffset = top(state).offset;\n        if (stream.eatSpace()) {\n          var lineOffset = stream.indentation();\n          if (lineOffset > scopeOffset)\n            pushPyScope(state);\n          else if (lineOffset < scopeOffset && dedent(stream, state) && stream.peek() != \"#\")\n            state.errorToken = true;\n          return null;\n        } else {\n          var style = tokenBaseInner(stream, state);\n          if (scopeOffset > 0 && dedent(stream, state))\n            style += \" \" + ERRORCLASS;\n          return style;\n        }\n      }\n      return tokenBaseInner(stream, state);\n    }\n\n    function tokenBaseInner(stream, state, inFormat) {\n      if (stream.eatSpace()) return null;\n\n      if (!inFormat && stream.match(/^#.*/)) return \"comment\";\n\n      if (stream.match(/^[0-9\\.]/, false)) {\n        var floatLiteral = false;\n        if (stream.match(/^[\\d_]*\\.\\d+(e[\\+\\-]?\\d+)?/i)) { floatLiteral = true; }\n        if (stream.match(/^[\\d_]+\\.\\d*/)) { floatLiteral = true; }\n        if (stream.match(/^\\.\\d+/)) { floatLiteral = true; }\n        if (floatLiteral) {\n          stream.eat(/J/i);\n          return \"number\";\n        }\n        var intLiteral = false;\n        if (stream.match(/^0x[0-9a-f_]+/i)) intLiteral = true;\n        if (stream.match(/^0b[01_]+/i)) intLiteral = true;\n        if (stream.match(/^0o[0-7_]+/i)) intLiteral = true;\n        if (stream.match(/^[1-9][\\d_]*(e[\\+\\-]?[\\d_]+)?/)) {\n          stream.eat(/J/i);\n          intLiteral = true;\n        }\n        if (stream.match(/^0(?![\\dx])/i)) intLiteral = true;\n        if (intLiteral) {\n          stream.eat(/L/i);\n          return \"number\";\n        }\n      }\n\n      if (stream.match(stringPrefixes)) {\n        var isFmtString = stream.current().toLowerCase().indexOf('f') !== -1;\n        if (!isFmtString) {\n          state.tokenize = tokenStringFactory(stream.current(), state.tokenize);\n          return state.tokenize(stream, state);\n        } else {\n          state.tokenize = formatStringFactory(stream.current(), state.tokenize);\n          return state.tokenize(stream, state);\n        }\n      }\n\n      for (var i = 0; i < operators.length; i++)\n        if (stream.match(operators[i])) return \"operator\"\n\n      if (stream.match(delimiters)) return \"punctuation\";\n\n      if (state.lastToken == \".\" && stream.match(identifiers))\n        return \"property\";\n\n      if (stream.match(keywords) || stream.match(wordOperators))\n        return \"keyword\";\n\n      if (stream.match(builtins))\n        return \"builtin\";\n\n      if (stream.match(/^(self|cls)\\b/))\n        return \"variable-2\";\n\n      if (stream.match(identifiers)) {\n        if (state.lastToken == \"def\" || state.lastToken == \"class\")\n          return \"def\";\n        return \"variable\";\n      }\n\n      stream.next();\n      return inFormat ? null :ERRORCLASS;\n    }\n\n    function formatStringFactory(delimiter, tokenOuter) {\n      while (\"rubf\".indexOf(delimiter.charAt(0).toLowerCase()) >= 0)\n        delimiter = delimiter.substr(1);\n\n      var singleline = delimiter.length == 1;\n      var OUTCLASS = \"string\";\n\n      function tokenNestedExpr(depth) {\n        return function(stream, state) {\n          var inner = tokenBaseInner(stream, state, true)\n          if (inner == \"punctuation\") {\n            if (stream.current() == \"{\") {\n              state.tokenize = tokenNestedExpr(depth + 1)\n            } else if (stream.current() == \"}\") {\n              if (depth > 1) state.tokenize = tokenNestedExpr(depth - 1)\n              else state.tokenize = tokenString\n            }\n          }\n          return inner\n        }\n      }\n\n      function tokenString(stream, state) {\n        while (!stream.eol()) {\n          stream.eatWhile(/[^'\"\\{\\}\\\\]/);\n          if (stream.eat(\"\\\\\")) {\n            stream.next();\n            if (singleline && stream.eol())\n              return OUTCLASS;\n          } else if (stream.match(delimiter)) {\n            state.tokenize = tokenOuter;\n            return OUTCLASS;\n          } else if (stream.match('{{')) {\n            return OUTCLASS;\n          } else if (stream.match('{', false)) {\n            state.tokenize = tokenNestedExpr(0)\n            if (stream.current()) return OUTCLASS;\n            else return state.tokenize(stream, state)\n          } else if (stream.match('}}')) {\n            return OUTCLASS;\n          } else if (stream.match('}')) {\n            return ERRORCLASS;\n          } else {\n            stream.eat(/['\"]/);\n          }\n        }\n        if (singleline) {\n          if (parserConf.singleLineStringErrors)\n            return ERRORCLASS;\n          else\n            state.tokenize = tokenOuter;\n        }\n        return OUTCLASS;\n      }\n      tokenString.isString = true;\n      return tokenString;\n    }\n\n    function tokenStringFactory(delimiter, tokenOuter) {\n      while (\"rubf\".indexOf(delimiter.charAt(0).toLowerCase()) >= 0)\n        delimiter = delimiter.substr(1);\n\n      var singleline = delimiter.length == 1;\n      var OUTCLASS = \"string\";\n\n      function tokenString(stream, state) {\n        while (!stream.eol()) {\n          stream.eatWhile(/[^'\"\\\\]/);\n          if (stream.eat(\"\\\\\")) {\n            stream.next();\n            if (singleline && stream.eol())\n              return OUTCLASS;\n          } else if (stream.match(delimiter)) {\n            state.tokenize = tokenOuter;\n            return OUTCLASS;\n          } else {\n            stream.eat(/['\"]/);\n          }\n        }\n        if (singleline) {\n          if (parserConf.singleLineStringErrors)\n            return ERRORCLASS;\n          else\n            state.tokenize = tokenOuter;\n        }\n        return OUTCLASS;\n      }\n      tokenString.isString = true;\n      return tokenString;\n    }\n\n    function pushPyScope(state) {\n      while (top(state).type != \"py\") state.scopes.pop()\n      state.scopes.push({offset: top(state).offset + conf.indentUnit,\n        type: \"py\",\n        align: null})\n    }\n\n    function pushBracketScope(stream, state, type) {\n      var align = stream.match(/^([\\s\\[\\{\\(]|#.*)*$/, false) ? null : stream.column() + 1\n      state.scopes.push({offset: state.indent + hangingIndent,\n        type: type,\n        align: align})\n    }\n\n    function dedent(stream, state) {\n      var indented = stream.indentation();\n      while (state.scopes.length > 1 && top(state).offset > indented) {\n        if (top(state).type != \"py\") return true;\n        state.scopes.pop();\n      }\n      return top(state).offset != indented;\n    }\n\n    function tokenLexer(stream, state) {\n      if (stream.sol()) state.beginningOfLine = true;\n\n      var style = state.tokenize(stream, state);\n      var current = stream.current();\n\n      if (state.beginningOfLine && current == \"@\")\n        return stream.match(identifiers, false) ? \"meta\" : py3 ? \"operator\" : ERRORCLASS;\n\n      if (/\\S/.test(current)) state.beginningOfLine = false;\n\n      if ((style == \"variable\" || style == \"builtin\")\n          && state.lastToken == \"meta\")\n        style = \"meta\";\n\n      if (current == \"pass\" || current == \"return\")\n        state.dedent += 1;\n\n      if (current == \"lambda\") state.lambda = true;\n      if (current == \":\" && !state.lambda && top(state).type == \"py\")\n        pushPyScope(state);\n\n      if (current.length == 1 && !/string|comment/.test(style)) {\n        var delimiter_index = \"[({\".indexOf(current);\n        if (delimiter_index != -1)\n          pushBracketScope(stream, state, \"])}\".slice(delimiter_index, delimiter_index+1));\n\n        delimiter_index = \"])}\".indexOf(current);\n        if (delimiter_index != -1) {\n          if (top(state).type == current) state.indent = state.scopes.pop().offset - hangingIndent\n          else return ERRORCLASS;\n        }\n      }\n      if (state.dedent > 0 && stream.eol() && top(state).type == \"py\") {\n        if (state.scopes.length > 1) state.scopes.pop();\n        state.dedent -= 1;\n      }\n\n      return style;\n    }\n\n    var external = {\n      startState: function(basecolumn) {\n        return {\n          tokenize: tokenBase,\n          scopes: [{offset: basecolumn || 0, type: \"py\", align: null}],\n          indent: basecolumn || 0,\n          lastToken: null,\n          lambda: false,\n          dedent: 0\n        };\n      },\n\n      token: function(stream, state) {\n        var addErr = state.errorToken;\n        if (addErr) state.errorToken = false;\n        var style = tokenLexer(stream, state);\n\n        if (style && style != \"comment\")\n          state.lastToken = (style == \"keyword\" || style == \"punctuation\") ? stream.current() : style;\n        if (style == \"punctuation\") style = null;\n\n        if (stream.eol() && state.lambda)\n          state.lambda = false;\n        return addErr ? style + \" \" + ERRORCLASS : style;\n      },\n\n      indent: function(state, textAfter) {\n        if (state.tokenize != tokenBase)\n          return state.tokenize.isString ? CodeMirror.Pass : 0;\n\n        var scope = top(state), closing = scope.type == textAfter.charAt(0)\n        if (scope.align != null)\n          return scope.align - (closing ? 1 : 0)\n        else\n          return scope.offset - (closing ? hangingIndent : 0)\n      },\n\n      electricInput: /^\\s*[\\}\\]\\)]$/,\n      closeBrackets: {triples: \"'\\\"\"},\n      lineComment: \"#\",\n      fold: \"indent\"\n    };\n    return external;\n  });\n\n  CodeMirror.defineMIME(\"text/x-python\", \"python\");\n\n  var words = function(str) { return str.split(\" \"); };\n\n  CodeMirror.defineMIME(\"text/x-cython\", {\n    name: \"python\",\n    extra_keywords: words(\"by cdef cimport cpdef ctypedef enum except \"+\n                          \"extern gil include nogil property public \"+\n                          \"readonly struct union DEF IF ELIF ELSE\")\n  });\n\n}"],"names":[],"mappings":"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"}