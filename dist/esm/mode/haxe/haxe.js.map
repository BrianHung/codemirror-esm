{"version":3,"file":"haxe.js","sources":["../../../../src/mode/haxe/haxe.js"],"sourcesContent":["// Source: https://github.com/codemirror/CodeMirror/tree/master/mode/haxe/haxe.js\nexport default function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"haxe\", function(config, parserConfig) {\n    var indentUnit = config.indentUnit;\n\n\n    function kw(type) {return {type: type, style: \"keyword\"};}\n    var A = kw(\"keyword a\"), B = kw(\"keyword b\"), C = kw(\"keyword c\");\n    var operator = kw(\"operator\"), atom = {type: \"atom\", style: \"atom\"}, attribute = {type:\"attribute\", style: \"attribute\"};\n    var type = kw(\"typedef\");\n    var keywords = {\n      \"if\": A, \"while\": A, \"else\": B, \"do\": B, \"try\": B,\n      \"return\": C, \"break\": C, \"continue\": C, \"new\": C, \"throw\": C,\n      \"var\": kw(\"var\"), \"inline\":attribute, \"static\": attribute, \"using\":kw(\"import\"),\n      \"public\": attribute, \"private\": attribute, \"cast\": kw(\"cast\"), \"import\": kw(\"import\"), \"macro\": kw(\"macro\"),\n      \"function\": kw(\"function\"), \"catch\": kw(\"catch\"), \"untyped\": kw(\"untyped\"), \"callback\": kw(\"cb\"),\n      \"for\": kw(\"for\"), \"switch\": kw(\"switch\"), \"case\": kw(\"case\"), \"default\": kw(\"default\"),\n      \"in\": operator, \"never\": kw(\"property_access\"), \"trace\":kw(\"trace\"),\n      \"class\": type, \"abstract\":type, \"enum\":type, \"interface\":type, \"typedef\":type, \"extends\":type, \"implements\":type, \"dynamic\":type,\n      \"true\": atom, \"false\": atom, \"null\": atom\n    };\n\n    var isOperatorChar = /[+\\-*&%=<>!?|]/;\n\n    function chain(stream, state, f) {\n      state.tokenize = f;\n      return f(stream, state);\n    }\n\n    function toUnescaped(stream, end) {\n      var escaped = false, next;\n      while ((next = stream.next()) != null) {\n        if (next == end && !escaped)\n          return true;\n        escaped = !escaped && next == \"\\\\\";\n      }\n    }\n\n    var type, content;\n    function ret(tp, style, cont) {\n      type = tp; content = cont;\n      return style;\n    }\n\n    function haxeTokenBase(stream, state) {\n      var ch = stream.next();\n      if (ch == '\"' || ch == \"'\") {\n        return chain(stream, state, haxeTokenString(ch));\n      } else if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n        return ret(ch);\n      } else if (ch == \"0\" && stream.eat(/x/i)) {\n        stream.eatWhile(/[\\da-f]/i);\n        return ret(\"number\", \"number\");\n      } else if (/\\d/.test(ch) || ch == \"-\" && stream.eat(/\\d/)) {\n        stream.match(/^\\d*(?:\\.\\d*(?!\\.))?(?:[eE][+\\-]?\\d+)?/);\n        return ret(\"number\", \"number\");\n      } else if (state.reAllowed && (ch == \"~\" && stream.eat(/\\//))) {\n        toUnescaped(stream, \"/\");\n        stream.eatWhile(/[gimsu]/);\n        return ret(\"regexp\", \"string-2\");\n      } else if (ch == \"/\") {\n        if (stream.eat(\"*\")) {\n          return chain(stream, state, haxeTokenComment);\n        } else if (stream.eat(\"/\")) {\n          stream.skipToEnd();\n          return ret(\"comment\", \"comment\");\n        } else {\n          stream.eatWhile(isOperatorChar);\n          return ret(\"operator\", null, stream.current());\n        }\n      } else if (ch == \"#\") {\n        stream.skipToEnd();\n        return ret(\"conditional\", \"meta\");\n      } else if (ch == \"@\") {\n        stream.eat(/:/);\n        stream.eatWhile(/[\\w_]/);\n        return ret (\"metadata\", \"meta\");\n      } else if (isOperatorChar.test(ch)) {\n        stream.eatWhile(isOperatorChar);\n        return ret(\"operator\", null, stream.current());\n      } else {\n        var word;\n        if(/[A-Z]/.test(ch)) {\n          stream.eatWhile(/[\\w_<>]/);\n          word = stream.current();\n          return ret(\"type\", \"variable-3\", word);\n        } else {\n          stream.eatWhile(/[\\w_]/);\n          var word = stream.current(), known = keywords.propertyIsEnumerable(word) && keywords[word];\n          return (known && state.kwAllowed) ? ret(known.type, known.style, word) :\n            ret(\"variable\", \"variable\", word);\n        }\n      }\n    }\n\n    function haxeTokenString(quote) {\n      return function(stream, state) {\n        if (toUnescaped(stream, quote))\n          state.tokenize = haxeTokenBase;\n        return ret(\"string\", \"string\");\n      };\n    }\n\n    function haxeTokenComment(stream, state) {\n      var maybeEnd = false, ch;\n      while (ch = stream.next()) {\n        if (ch == \"/\" && maybeEnd) {\n          state.tokenize = haxeTokenBase;\n          break;\n        }\n        maybeEnd = (ch == \"*\");\n      }\n      return ret(\"comment\", \"comment\");\n    }\n\n\n    var atomicTypes = {\"atom\": true, \"number\": true, \"variable\": true, \"string\": true, \"regexp\": true};\n\n    function HaxeLexical(indented, column, type, align, prev, info) {\n      this.indented = indented;\n      this.column = column;\n      this.type = type;\n      this.prev = prev;\n      this.info = info;\n      if (align != null) this.align = align;\n    }\n\n    function inScope(state, varname) {\n      for (var v = state.localVars; v; v = v.next)\n        if (v.name == varname) return true;\n    }\n\n    function parseHaxe(state, style, type, content, stream) {\n      var cc = state.cc;\n      cx.state = state; cx.stream = stream; cx.marked = null, cx.cc = cc;\n\n      if (!state.lexical.hasOwnProperty(\"align\"))\n        state.lexical.align = true;\n\n      while(true) {\n        var combinator = cc.length ? cc.pop() : statement;\n        if (combinator(type, content)) {\n          while(cc.length && cc[cc.length - 1].lex)\n            cc.pop()();\n          if (cx.marked) return cx.marked;\n          if (type == \"variable\" && inScope(state, content)) return \"variable-2\";\n          if (type == \"variable\" && imported(state, content)) return \"variable-3\";\n          return style;\n        }\n      }\n    }\n\n    function imported(state, typename) {\n      if (/[a-z]/.test(typename.charAt(0)))\n        return false;\n      var len = state.importedtypes.length;\n      for (var i = 0; i<len; i++)\n        if(state.importedtypes[i]==typename) return true;\n    }\n\n    function registerimport(importname) {\n      var state = cx.state;\n      for (var t = state.importedtypes; t; t = t.next)\n        if(t.name == importname) return;\n      state.importedtypes = { name: importname, next: state.importedtypes };\n    }\n\n    var cx = {state: null, column: null, marked: null, cc: null};\n    function pass() {\n      for (var i = arguments.length - 1; i >= 0; i--) cx.cc.push(arguments[i]);\n    }\n    function cont() {\n      pass.apply(null, arguments);\n      return true;\n    }\n    function inList(name, list) {\n      for (var v = list; v; v = v.next)\n        if (v.name == name) return true;\n      return false;\n    }\n    function register(varname) {\n      var state = cx.state;\n      if (state.context) {\n        cx.marked = \"def\";\n        if (inList(varname, state.localVars)) return;\n        state.localVars = {name: varname, next: state.localVars};\n      } else if (state.globalVars) {\n        if (inList(varname, state.globalVars)) return;\n        state.globalVars = {name: varname, next: state.globalVars};\n      }\n    }\n\n\n    var defaultVars = {name: \"this\", next: null};\n    function pushcontext() {\n      if (!cx.state.context) cx.state.localVars = defaultVars;\n      cx.state.context = {prev: cx.state.context, vars: cx.state.localVars};\n    }\n    function popcontext() {\n      cx.state.localVars = cx.state.context.vars;\n      cx.state.context = cx.state.context.prev;\n    }\n    popcontext.lex = true;\n    function pushlex(type, info) {\n      var result = function() {\n        var state = cx.state;\n        state.lexical = new HaxeLexical(state.indented, cx.stream.column(), type, null, state.lexical, info);\n      };\n      result.lex = true;\n      return result;\n    }\n    function poplex() {\n      var state = cx.state;\n      if (state.lexical.prev) {\n        if (state.lexical.type == \")\")\n          state.indented = state.lexical.indented;\n        state.lexical = state.lexical.prev;\n      }\n    }\n    poplex.lex = true;\n\n    function expect(wanted) {\n      function f(type) {\n        if (type == wanted) return cont();\n        else if (wanted == \";\") return pass();\n        else return cont(f);\n      }\n      return f;\n    }\n\n    function statement(type) {\n      if (type == \"@\") return cont(metadef);\n      if (type == \"var\") return cont(pushlex(\"vardef\"), vardef1, expect(\";\"), poplex);\n      if (type == \"keyword a\") return cont(pushlex(\"form\"), expression, statement, poplex);\n      if (type == \"keyword b\") return cont(pushlex(\"form\"), statement, poplex);\n      if (type == \"{\") return cont(pushlex(\"}\"), pushcontext, block, poplex, popcontext);\n      if (type == \";\") return cont();\n      if (type == \"attribute\") return cont(maybeattribute);\n      if (type == \"function\") return cont(functiondef);\n      if (type == \"for\") return cont(pushlex(\"form\"), expect(\"(\"), pushlex(\")\"), forspec1, expect(\")\"),\n        poplex, statement, poplex);\n      if (type == \"variable\") return cont(pushlex(\"stat\"), maybelabel);\n      if (type == \"switch\") return cont(pushlex(\"form\"), expression, pushlex(\"}\", \"switch\"), expect(\"{\"),\n        block, poplex, poplex);\n      if (type == \"case\") return cont(expression, expect(\":\"));\n      if (type == \"default\") return cont(expect(\":\"));\n      if (type == \"catch\") return cont(pushlex(\"form\"), pushcontext, expect(\"(\"), funarg, expect(\")\"),\n        statement, poplex, popcontext);\n      if (type == \"import\") return cont(importdef, expect(\";\"));\n      if (type == \"typedef\") return cont(typedef);\n      return pass(pushlex(\"stat\"), expression, expect(\";\"), poplex);\n    }\n    function expression(type) {\n      if (atomicTypes.hasOwnProperty(type)) return cont(maybeoperator);\n      if (type == \"type\" ) return cont(maybeoperator);\n      if (type == \"function\") return cont(functiondef);\n      if (type == \"keyword c\") return cont(maybeexpression);\n      if (type == \"(\") return cont(pushlex(\")\"), maybeexpression, expect(\")\"), poplex, maybeoperator);\n      if (type == \"operator\") return cont(expression);\n      if (type == \"[\") return cont(pushlex(\"]\"), commasep(maybeexpression, \"]\"), poplex, maybeoperator);\n      if (type == \"{\") return cont(pushlex(\"}\"), commasep(objprop, \"}\"), poplex, maybeoperator);\n      return cont();\n    }\n    function maybeexpression(type) {\n      if (type.match(/[;\\}\\)\\],]/)) return pass();\n      return pass(expression);\n    }\n\n    function maybeoperator(type, value) {\n      if (type == \"operator\" && /\\+\\+|--/.test(value)) return cont(maybeoperator);\n      if (type == \"operator\" || type == \":\") return cont(expression);\n      if (type == \";\") return;\n      if (type == \"(\") return cont(pushlex(\")\"), commasep(expression, \")\"), poplex, maybeoperator);\n      if (type == \".\") return cont(property, maybeoperator);\n      if (type == \"[\") return cont(pushlex(\"]\"), expression, expect(\"]\"), poplex, maybeoperator);\n    }\n\n    function maybeattribute(type) {\n      if (type == \"attribute\") return cont(maybeattribute);\n      if (type == \"function\") return cont(functiondef);\n      if (type == \"var\") return cont(vardef1);\n    }\n\n    function metadef(type) {\n      if(type == \":\") return cont(metadef);\n      if(type == \"variable\") return cont(metadef);\n      if(type == \"(\") return cont(pushlex(\")\"), commasep(metaargs, \")\"), poplex, statement);\n    }\n    function metaargs(type) {\n      if(type == \"variable\") return cont();\n    }\n\n    function importdef (type, value) {\n      if(type == \"variable\" && /[A-Z]/.test(value.charAt(0))) { registerimport(value); return cont(); }\n      else if(type == \"variable\" || type == \"property\" || type == \".\" || value == \"*\") return cont(importdef);\n    }\n\n    function typedef (type, value)\n    {\n      if(type == \"variable\" && /[A-Z]/.test(value.charAt(0))) { registerimport(value); return cont(); }\n      else if (type == \"type\" && /[A-Z]/.test(value.charAt(0))) { return cont(); }\n    }\n\n    function maybelabel(type) {\n      if (type == \":\") return cont(poplex, statement);\n      return pass(maybeoperator, expect(\";\"), poplex);\n    }\n    function property(type) {\n      if (type == \"variable\") {cx.marked = \"property\"; return cont();}\n    }\n    function objprop(type) {\n      if (type == \"variable\") cx.marked = \"property\";\n      if (atomicTypes.hasOwnProperty(type)) return cont(expect(\":\"), expression);\n    }\n    function commasep(what, end) {\n      function proceed(type) {\n        if (type == \",\") return cont(what, proceed);\n        if (type == end) return cont();\n        return cont(expect(end));\n      }\n      return function(type) {\n        if (type == end) return cont();\n        else return pass(what, proceed);\n      };\n    }\n    function block(type) {\n      if (type == \"}\") return cont();\n      return pass(statement, block);\n    }\n    function vardef1(type, value) {\n      if (type == \"variable\"){register(value); return cont(typeuse, vardef2);}\n      return cont();\n    }\n    function vardef2(type, value) {\n      if (value == \"=\") return cont(expression, vardef2);\n      if (type == \",\") return cont(vardef1);\n    }\n    function forspec1(type, value) {\n      if (type == \"variable\") {\n        register(value);\n        return cont(forin, expression)\n      } else {\n        return pass()\n      }\n    }\n    function forin(_type, value) {\n      if (value == \"in\") return cont();\n    }\n    function functiondef(type, value) {\n      if (type == \"variable\" || type == \"type\") {register(value); return cont(functiondef);}\n      if (value == \"new\") return cont(functiondef);\n      if (type == \"(\") return cont(pushlex(\")\"), pushcontext, commasep(funarg, \")\"), poplex, typeuse, statement, popcontext);\n    }\n    function typeuse(type) {\n      if(type == \":\") return cont(typestring);\n    }\n    function typestring(type) {\n      if(type == \"type\") return cont();\n      if(type == \"variable\") return cont();\n      if(type == \"{\") return cont(pushlex(\"}\"), commasep(typeprop, \"}\"), poplex);\n    }\n    function typeprop(type) {\n      if(type == \"variable\") return cont(typeuse);\n    }\n    function funarg(type, value) {\n      if (type == \"variable\") {register(value); return cont(typeuse);}\n    }\n\n    return {\n      startState: function(basecolumn) {\n        var defaulttypes = [\"Int\", \"Float\", \"String\", \"Void\", \"Std\", \"Bool\", \"Dynamic\", \"Array\"];\n        var state = {\n          tokenize: haxeTokenBase,\n          reAllowed: true,\n          kwAllowed: true,\n          cc: [],\n          lexical: new HaxeLexical((basecolumn || 0) - indentUnit, 0, \"block\", false),\n          localVars: parserConfig.localVars,\n          importedtypes: defaulttypes,\n          context: parserConfig.localVars && {vars: parserConfig.localVars},\n          indented: 0\n        };\n        if (parserConfig.globalVars && typeof parserConfig.globalVars == \"object\")\n          state.globalVars = parserConfig.globalVars;\n        return state;\n      },\n\n      token: function(stream, state) {\n        if (stream.sol()) {\n          if (!state.lexical.hasOwnProperty(\"align\"))\n            state.lexical.align = false;\n          state.indented = stream.indentation();\n        }\n        if (stream.eatSpace()) return null;\n        var style = state.tokenize(stream, state);\n        if (type == \"comment\") return style;\n        state.reAllowed = !!(type == \"operator\" || type == \"keyword c\" || type.match(/^[\\[{}\\(,;:]$/));\n        state.kwAllowed = type != '.';\n        return parseHaxe(state, style, type, content, stream);\n      },\n\n      indent: function(state, textAfter) {\n        if (state.tokenize != haxeTokenBase) return 0;\n        var firstChar = textAfter && textAfter.charAt(0), lexical = state.lexical;\n        if (lexical.type == \"stat\" && firstChar == \"}\") lexical = lexical.prev;\n        var type = lexical.type, closing = firstChar == type;\n        if (type == \"vardef\") return lexical.indented + 4;\n        else if (type == \"form\" && firstChar == \"{\") return lexical.indented;\n        else if (type == \"stat\" || type == \"form\") return lexical.indented + indentUnit;\n        else if (lexical.info == \"switch\" && !closing)\n          return lexical.indented + (/^(?:case|default)\\b/.test(textAfter) ? indentUnit : 2 * indentUnit);\n        else if (lexical.align) return lexical.column + (closing ? 0 : 1);\n        else return lexical.indented + (closing ? 0 : indentUnit);\n      },\n\n      electricChars: \"{}\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      lineComment: \"//\"\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-haxe\", \"haxe\");\n\n  CodeMirror.defineMode(\"hxml\", function () {\n\n    return {\n      startState: function () {\n        return {\n          define: false,\n          inString: false\n        };\n      },\n      token: function (stream, state) {\n        var ch = stream.peek();\n        var sol = stream.sol();\n\n        if (ch == \"#\") {\n          stream.skipToEnd();\n          return \"comment\";\n        }\n        if (sol && ch == \"-\") {\n          var style = \"variable-2\";\n\n          stream.eat(/-/);\n\n          if (stream.peek() == \"-\") {\n            stream.eat(/-/);\n            style = \"keyword a\";\n          }\n\n          if (stream.peek() == \"D\") {\n            stream.eat(/[D]/);\n            style = \"keyword c\";\n            state.define = true;\n          }\n\n          stream.eatWhile(/[A-Z]/i);\n          return style;\n        }\n\n        var ch = stream.peek();\n\n        if (state.inString == false && ch == \"'\") {\n          state.inString = true;\n          stream.next();\n        }\n\n        if (state.inString == true) {\n          if (stream.skipTo(\"'\")) {\n\n          } else {\n            stream.skipToEnd();\n          }\n\n          if (stream.peek() == \"'\") {\n            stream.next();\n            state.inString = false;\n          }\n\n          return \"string\";\n        }\n\n        stream.next();\n        return null;\n      },\n      lineComment: \"#\"\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-hxml\", \"hxml\");\n\n}"],"names":["arguments"],"mappings":"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"}