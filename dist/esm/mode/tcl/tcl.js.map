{"version":3,"file":"tcl.js","sources":["../../../../src/mode/tcl/tcl.js"],"sourcesContent":["// Source: https://github.com/codemirror/CodeMirror/tree/master/mode/tcl/tcl.js\nexport default function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"tcl\", function() {\n    function parseWords(str) {\n      var obj = {}, words = str.split(\" \");\n      for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n      return obj;\n    }\n    var keywords = parseWords(\"Tcl safe after append array auto_execok auto_import auto_load \" +\n        \"auto_mkindex auto_mkindex_old auto_qualify auto_reset bgerror \" +\n        \"binary break catch cd close concat continue dde eof encoding error \" +\n        \"eval exec exit expr fblocked fconfigure fcopy file fileevent filename \" +\n        \"filename flush for foreach format gets glob global history http if \" +\n        \"incr info interp join lappend lindex linsert list llength load lrange \" +\n        \"lreplace lsearch lset lsort memory msgcat namespace open package parray \" +\n        \"pid pkg::create pkg_mkIndex proc puts pwd re_syntax read regex regexp \" +\n        \"registry regsub rename resource return scan seek set socket source split \" +\n        \"string subst switch tcl_endOfWord tcl_findLibrary tcl_startOfNextWord \" +\n        \"tcl_wordBreakAfter tcl_startOfPreviousWord tcl_wordBreakBefore tcltest \" +\n        \"tclvars tell time trace unknown unset update uplevel upvar variable \" +\n    \"vwait\");\n    var functions = parseWords(\"if elseif else and not or eq ne in ni for foreach while switch\");\n    var isOperatorChar = /[+\\-*&%=<>!?^\\/\\|]/;\n    function chain(stream, state, f) {\n      state.tokenize = f;\n      return f(stream, state);\n    }\n    function tokenBase(stream, state) {\n      var beforeParams = state.beforeParams;\n      state.beforeParams = false;\n      var ch = stream.next();\n      if ((ch == '\"' || ch == \"'\") && state.inParams) {\n        return chain(stream, state, tokenString(ch));\n      } else if (/[\\[\\]{}\\(\\),;\\.]/.test(ch)) {\n        if (ch == \"(\" && beforeParams) state.inParams = true;\n        else if (ch == \")\") state.inParams = false;\n        return null;\n      } else if (/\\d/.test(ch)) {\n        stream.eatWhile(/[\\w\\.]/);\n        return \"number\";\n      } else if (ch == \"#\") {\n        if (stream.eat(\"*\"))\n          return chain(stream, state, tokenComment);\n        if (ch == \"#\" && stream.match(/ *\\[ *\\[/))\n          return chain(stream, state, tokenUnparsed);\n        stream.skipToEnd();\n        return \"comment\";\n      } else if (ch == '\"') {\n        stream.skipTo(/\"/);\n        return \"comment\";\n      } else if (ch == \"$\") {\n        stream.eatWhile(/[$_a-z0-9A-Z\\.{:]/);\n        stream.eatWhile(/}/);\n        state.beforeParams = true;\n        return \"builtin\";\n      } else if (isOperatorChar.test(ch)) {\n        stream.eatWhile(isOperatorChar);\n        return \"comment\";\n      } else {\n        stream.eatWhile(/[\\w\\$_{}\\xa1-\\uffff]/);\n        var word = stream.current().toLowerCase();\n        if (keywords && keywords.propertyIsEnumerable(word))\n          return \"keyword\";\n        if (functions && functions.propertyIsEnumerable(word)) {\n          state.beforeParams = true;\n          return \"keyword\";\n        }\n        return null;\n      }\n    }\n    function tokenString(quote) {\n      return function(stream, state) {\n        var escaped = false, next, end = false;\n        while ((next = stream.next()) != null) {\n          if (next == quote && !escaped) {\n            end = true;\n            break;\n          }\n          escaped = !escaped && next == \"\\\\\";\n        }\n        if (end) state.tokenize = tokenBase;\n        return \"string\";\n      };\n    }\n    function tokenComment(stream, state) {\n      var maybeEnd = false, ch;\n      while (ch = stream.next()) {\n        if (ch == \"#\" && maybeEnd) {\n          state.tokenize = tokenBase;\n          break;\n        }\n        maybeEnd = (ch == \"*\");\n      }\n      return \"comment\";\n    }\n    function tokenUnparsed(stream, state) {\n      var maybeEnd = 0, ch;\n      while (ch = stream.next()) {\n        if (ch == \"#\" && maybeEnd == 2) {\n          state.tokenize = tokenBase;\n          break;\n        }\n        if (ch == \"]\")\n          maybeEnd++;\n        else if (ch != \" \")\n          maybeEnd = 0;\n      }\n      return \"meta\";\n    }\n    return {\n      startState: function() {\n        return {\n          tokenize: tokenBase,\n          beforeParams: false,\n          inParams: false\n        };\n      },\n      token: function(stream, state) {\n        if (stream.eatSpace()) return null;\n        return state.tokenize(stream, state);\n      },\n      lineComment: \"#\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-tcl\", \"tcl\");\n\n}"],"names":[],"mappings":"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"}