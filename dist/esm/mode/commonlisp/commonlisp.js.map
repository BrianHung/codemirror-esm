{"version":3,"file":"commonlisp.js","sources":["../../../../src/mode/commonlisp/commonlisp.js"],"sourcesContent":["// Source: https://github.com/codemirror/CodeMirror/tree/master/mode/commonlisp/commonlisp.js\nexport default function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"commonlisp\", function (config) {\n    var specialForm = /^(block|let*|return-from|catch|load-time-value|setq|eval-when|locally|symbol-macrolet|flet|macrolet|tagbody|function|multiple-value-call|the|go|multiple-value-prog1|throw|if|progn|unwind-protect|labels|progv|let|quote)$/;\n    var assumeBody = /^with|^def|^do|^prog|case$|^cond$|bind$|when$|unless$/;\n    var numLiteral = /^(?:[+\\-]?(?:\\d+|\\d*\\.\\d+)(?:[efd][+\\-]?\\d+)?|[+\\-]?\\d+(?:\\/[+\\-]?\\d+)?|#b[+\\-]?[01]+|#o[+\\-]?[0-7]+|#x[+\\-]?[\\da-f]+)/;\n    var symbol = /[^\\s'`,@()\\[\\]\";]/;\n    var type;\n\n    function readSym(stream) {\n      var ch;\n      while (ch = stream.next()) {\n        if (ch == \"\\\\\") stream.next();\n        else if (!symbol.test(ch)) { stream.backUp(1); break; }\n      }\n      return stream.current();\n    }\n\n    function base(stream, state) {\n      if (stream.eatSpace()) {type = \"ws\"; return null;}\n      if (stream.match(numLiteral)) return \"number\";\n      var ch = stream.next();\n      if (ch == \"\\\\\") ch = stream.next();\n\n      if (ch == '\"') return (state.tokenize = inString)(stream, state);\n      else if (ch == \"(\") { type = \"open\"; return \"bracket\"; }\n      else if (ch == \")\" || ch == \"]\") { type = \"close\"; return \"bracket\"; }\n      else if (ch == \";\") { stream.skipToEnd(); type = \"ws\"; return \"comment\"; }\n      else if (/['`,@]/.test(ch)) return null;\n      else if (ch == \"|\") {\n        if (stream.skipTo(\"|\")) { stream.next(); return \"symbol\"; }\n        else { stream.skipToEnd(); return \"error\"; }\n      } else if (ch == \"#\") {\n        var ch = stream.next();\n        if (ch == \"(\") { type = \"open\"; return \"bracket\"; }\n        else if (/[+\\-=\\.']/.test(ch)) return null;\n        else if (/\\d/.test(ch) && stream.match(/^\\d*#/)) return null;\n        else if (ch == \"|\") return (state.tokenize = inComment)(stream, state);\n        else if (ch == \":\") { readSym(stream); return \"meta\"; }\n        else if (ch == \"\\\\\") { stream.next(); readSym(stream); return \"string-2\" }\n        else return \"error\";\n      } else {\n        var name = readSym(stream);\n        if (name == \".\") return null;\n        type = \"symbol\";\n        if (name == \"nil\" || name == \"t\" || name.charAt(0) == \":\") return \"atom\";\n        if (state.lastType == \"open\" && (specialForm.test(name) || assumeBody.test(name))) return \"keyword\";\n        if (name.charAt(0) == \"&\") return \"variable-2\";\n        return \"variable\";\n      }\n    }\n\n    function inString(stream, state) {\n      var escaped = false, next;\n      while (next = stream.next()) {\n        if (next == '\"' && !escaped) { state.tokenize = base; break; }\n        escaped = !escaped && next == \"\\\\\";\n      }\n      return \"string\";\n    }\n\n    function inComment(stream, state) {\n      var next, last;\n      while (next = stream.next()) {\n        if (next == \"#\" && last == \"|\") { state.tokenize = base; break; }\n        last = next;\n      }\n      type = \"ws\";\n      return \"comment\";\n    }\n\n    return {\n      startState: function () {\n        return {ctx: {prev: null, start: 0, indentTo: 0}, lastType: null, tokenize: base};\n      },\n\n      token: function (stream, state) {\n        if (stream.sol() && typeof state.ctx.indentTo != \"number\")\n          state.ctx.indentTo = state.ctx.start + 1;\n\n        type = null;\n        var style = state.tokenize(stream, state);\n        if (type != \"ws\") {\n          if (state.ctx.indentTo == null) {\n            if (type == \"symbol\" && assumeBody.test(stream.current()))\n              state.ctx.indentTo = state.ctx.start + config.indentUnit;\n            else\n              state.ctx.indentTo = \"next\";\n          } else if (state.ctx.indentTo == \"next\") {\n            state.ctx.indentTo = stream.column();\n          }\n          state.lastType = type;\n        }\n        if (type == \"open\") state.ctx = {prev: state.ctx, start: stream.column(), indentTo: null};\n        else if (type == \"close\") state.ctx = state.ctx.prev || state.ctx;\n        return style;\n      },\n\n      indent: function (state, _textAfter) {\n        var i = state.ctx.indentTo;\n        return typeof i == \"number\" ? i : state.ctx.start + 1;\n      },\n\n      closeBrackets: {pairs: \"()[]{}\\\"\\\"\"},\n      lineComment: \";;\",\n      blockCommentStart: \"#|\",\n      blockCommentEnd: \"|#\"\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-common-lisp\", \"commonlisp\");\n\n}"],"names":[],"mappings":"AAAA;AACe,oBAAS,UAAU,EAAE;AAEpC;AACA,EAAE,UAAU,CAAC,UAAU,CAAC,YAAY,EAAE,UAAU,MAAM,EAAE;AACxD,IAAI,IAAI,WAAW,GAAG,6NAA6N,CAAC;AACpP,IAAI,IAAI,UAAU,GAAG,uDAAuD,CAAC;AAC7E,IAAI,IAAI,UAAU,GAAG,wHAAwH,CAAC;AAC9I,IAAI,IAAI,MAAM,GAAG,mBAAmB,CAAC;AACrC,IAAI,IAAI,IAAI,CAAC;AACb;AACA,IAAI,SAAS,OAAO,CAAC,MAAM,EAAE;AAC7B,MAAM,IAAI,EAAE,CAAC;AACb,MAAM,OAAO,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,EAAE;AACjC,QAAQ,IAAI,EAAE,IAAI,IAAI,IAAE,MAAM,CAAC,IAAI,EAAE,GAAC;AACtC,aAAa,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;AAC/D,OAAO;AACP,MAAM,OAAO,MAAM,CAAC,OAAO,EAAE,CAAC;AAC9B,KAAK;AACL;AACA,IAAI,SAAS,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE;AACjC,MAAM,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC;AACxD,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,IAAE,OAAO,QAAQ,GAAC;AACpD,MAAM,IAAI,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;AAC7B,MAAM,IAAI,EAAE,IAAI,IAAI,IAAE,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,GAAC;AACzC;AACA,MAAM,IAAI,EAAE,IAAI,GAAG,IAAE,OAAO,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,GAAC;AACvE,WAAW,IAAI,EAAE,IAAI,GAAG,EAAE,EAAE,IAAI,GAAG,MAAM,CAAC,CAAC,OAAO,SAAS,CAAC,EAAE;AAC9D,WAAW,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,EAAE,EAAE,IAAI,GAAG,OAAO,CAAC,CAAC,OAAO,SAAS,CAAC,EAAE;AAC5E,WAAW,IAAI,EAAE,IAAI,GAAG,EAAE,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,OAAO,SAAS,CAAC,EAAE;AAChF,WAAW,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,IAAE,OAAO,IAAI,GAAC;AAC9C,WAAW,IAAI,EAAE,IAAI,GAAG,EAAE;AAC1B,QAAQ,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,QAAQ,CAAC,EAAE;AACnE,aAAa,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,OAAO,OAAO,CAAC,EAAE;AACpD,OAAO,MAAM,IAAI,EAAE,IAAI,GAAG,EAAE;AAC5B,QAAQ,IAAI,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;AAC/B,QAAQ,IAAI,EAAE,IAAI,GAAG,EAAE,EAAE,IAAI,GAAG,MAAM,CAAC,CAAC,OAAO,SAAS,CAAC,EAAE;AAC3D,aAAa,IAAI,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,IAAE,OAAO,IAAI,GAAC;AACnD,aAAa,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAE,OAAO,IAAI,GAAC;AACrE,aAAa,IAAI,EAAE,IAAI,GAAG,IAAE,OAAO,CAAC,KAAK,CAAC,QAAQ,GAAG,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC,GAAC;AAC/E,aAAa,IAAI,EAAE,IAAI,GAAG,EAAE,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,MAAM,CAAC,EAAE;AAC/D,aAAa,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,UAAU,EAAE;AAClF,eAAa,OAAO,OAAO,GAAC;AAC5B,OAAO,MAAM;AACb,QAAQ,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AACnC,QAAQ,IAAI,IAAI,IAAI,GAAG,IAAE,OAAO,IAAI,GAAC;AACrC,QAAQ,IAAI,GAAG,QAAQ,CAAC;AACxB,QAAQ,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,IAAE,OAAO,MAAM,GAAC;AACjF,QAAQ,IAAI,KAAK,CAAC,QAAQ,IAAI,MAAM,KAAK,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAE,OAAO,SAAS,GAAC;AAC5G,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,IAAE,OAAO,YAAY,GAAC;AACvD,QAAQ,OAAO,UAAU,CAAC;AAC1B,OAAO;AACP,KAAK;AACL;AACA,IAAI,SAAS,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE;AACrC,MAAM,IAAI,OAAO,GAAG,KAAK,EAAE,IAAI,CAAC;AAChC,MAAM,OAAO,IAAI,GAAG,MAAM,CAAC,IAAI,EAAE,EAAE;AACnC,QAAQ,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,MAAM,EAAE;AACtE,QAAQ,OAAO,GAAG,CAAC,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC;AAC3C,OAAO;AACP,MAAM,OAAO,QAAQ,CAAC;AACtB,KAAK;AACL;AACA,IAAI,SAAS,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE;AACtC,MAAM,IAAI,IAAI,EAAE,IAAI,CAAC;AACrB,MAAM,OAAO,IAAI,GAAG,MAAM,CAAC,IAAI,EAAE,EAAE;AACnC,QAAQ,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,EAAE,EAAE,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,MAAM,EAAE;AACzE,QAAQ,IAAI,GAAG,IAAI,CAAC;AACpB,OAAO;AACP,MAAM,IAAI,GAAG,IAAI,CAAC;AAClB,MAAM,OAAO,SAAS,CAAC;AACvB,KAAK;AACL;AACA,IAAI,OAAO;AACX,MAAM,UAAU,EAAE,YAAY;AAC9B,QAAQ,OAAO,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;AAC1F,OAAO;AACP;AACA,MAAM,KAAK,EAAE,UAAU,MAAM,EAAE,KAAK,EAAE;AACtC,QAAQ,IAAI,MAAM,CAAC,GAAG,EAAE,IAAI,OAAO,KAAK,CAAC,GAAG,CAAC,QAAQ,IAAI,QAAQ;AACjE,YAAU,KAAK,CAAC,GAAG,CAAC,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,GAAC;AACnD;AACA,QAAQ,IAAI,GAAG,IAAI,CAAC;AACpB,QAAQ,IAAI,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAClD,QAAQ,IAAI,IAAI,IAAI,IAAI,EAAE;AAC1B,UAAU,IAAI,KAAK,CAAC,GAAG,CAAC,QAAQ,IAAI,IAAI,EAAE;AAC1C,YAAY,IAAI,IAAI,IAAI,QAAQ,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;AACrE,gBAAc,KAAK,CAAC,GAAG,CAAC,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,GAAC;AACvE;AACA,gBAAc,KAAK,CAAC,GAAG,CAAC,QAAQ,GAAG,MAAM,GAAC;AAC1C,WAAW,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,QAAQ,IAAI,MAAM,EAAE;AACnD,YAAY,KAAK,CAAC,GAAG,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;AACjD,WAAW;AACX,UAAU,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;AAChC,SAAS;AACT,QAAQ,IAAI,IAAI,IAAI,MAAM,IAAE,KAAK,CAAC,GAAG,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,GAAC;AAClG,aAAa,IAAI,IAAI,IAAI,OAAO,IAAE,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,KAAK,CAAC,GAAG,GAAC;AAC1E,QAAQ,OAAO,KAAK,CAAC;AACrB,OAAO;AACP;AACA,MAAM,MAAM,EAAE,UAAU,KAAK,EAAE,UAAU,EAAE;AAC3C,QAAQ,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC;AACnC,QAAQ,OAAO,OAAO,CAAC,IAAI,QAAQ,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;AAC9D,OAAO;AACP;AACA,MAAM,aAAa,EAAE,CAAC,KAAK,EAAE,YAAY,CAAC;AAC1C,MAAM,WAAW,EAAE,IAAI;AACvB,MAAM,iBAAiB,EAAE,IAAI;AAC7B,MAAM,eAAe,EAAE,IAAI;AAC3B,KAAK,CAAC;AACN,GAAG,CAAC,CAAC;AACL;AACA,EAAE,UAAU,CAAC,UAAU,CAAC,oBAAoB,EAAE,YAAY,CAAC,CAAC;AAC5D;AACA;;;;"}