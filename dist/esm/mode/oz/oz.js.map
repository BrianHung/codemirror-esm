{"version":3,"file":"oz.js","sources":["../../../../src/mode/oz/oz.js"],"sourcesContent":["// Source: https://github.com/codemirror/CodeMirror/tree/master/mode/oz/oz.js\nexport default function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"oz\", function (conf) {\n\n    function wordRegexp(words) {\n      return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n    }\n\n    var singleOperators = /[\\^@!\\|<>#~\\.\\*\\-\\+\\\\/,=]/;\n    var doubleOperators = /(<-)|(:=)|(=<)|(>=)|(<=)|(<:)|(>:)|(=:)|(\\\\=)|(\\\\=:)|(!!)|(==)|(::)/;\n    var tripleOperators = /(:::)|(\\.\\.\\.)|(=<:)|(>=:)/;\n\n    var middle = [\"in\", \"then\", \"else\", \"of\", \"elseof\", \"elsecase\", \"elseif\", \"catch\",\n      \"finally\", \"with\", \"require\", \"prepare\", \"import\", \"export\", \"define\", \"do\"];\n    var end = [\"end\"];\n\n    var atoms = wordRegexp([\"true\", \"false\", \"nil\", \"unit\"]);\n    var commonKeywords = wordRegexp([\"andthen\", \"at\", \"attr\", \"declare\", \"feat\", \"from\", \"lex\",\n      \"mod\", \"div\", \"mode\", \"orelse\", \"parser\", \"prod\", \"prop\", \"scanner\", \"self\", \"syn\", \"token\"]);\n    var openingKeywords = wordRegexp([\"local\", \"proc\", \"fun\", \"case\", \"class\", \"if\", \"cond\", \"or\", \"dis\",\n      \"choice\", \"not\", \"thread\", \"try\", \"raise\", \"lock\", \"for\", \"suchthat\", \"meth\", \"functor\"]);\n    var middleKeywords = wordRegexp(middle);\n    var endKeywords = wordRegexp(end);\n\n    function tokenBase(stream, state) {\n      if (stream.eatSpace()) {\n        return null;\n      }\n\n      if(stream.match(/[{}]/)) {\n        return \"bracket\";\n      }\n\n      if (stream.match(/(\\[])/)) {\n        return \"keyword\"\n      }\n\n      if (stream.match(tripleOperators) || stream.match(doubleOperators)) {\n        return \"operator\";\n      }\n\n      if(stream.match(atoms)) {\n        return 'atom';\n      }\n\n      var matched = stream.match(openingKeywords);\n      if (matched) {\n        if (!state.doInCurrentLine)\n          state.currentIndent++;\n        else\n          state.doInCurrentLine = false;\n\n        if(matched[0] == \"proc\" || matched[0] == \"fun\")\n          state.tokenize = tokenFunProc;\n        else if(matched[0] == \"class\")\n          state.tokenize = tokenClass;\n        else if(matched[0] == \"meth\")\n          state.tokenize = tokenMeth;\n\n        return 'keyword';\n      }\n\n      if (stream.match(middleKeywords) || stream.match(commonKeywords)) {\n        return \"keyword\"\n      }\n\n      if (stream.match(endKeywords)) {\n        state.currentIndent--;\n        return 'keyword';\n      }\n\n      var ch = stream.next();\n\n      if (ch == '\"' || ch == \"'\") {\n        state.tokenize = tokenString(ch);\n        return state.tokenize(stream, state);\n      }\n\n      if (/[~\\d]/.test(ch)) {\n        if (ch == \"~\") {\n          if(! /^[0-9]/.test(stream.peek()))\n            return null;\n          else if (( stream.next() == \"0\" && stream.match(/^[xX][0-9a-fA-F]+/)) || stream.match(/^[0-9]*(\\.[0-9]+)?([eE][~+]?[0-9]+)?/))\n            return \"number\";\n        }\n\n        if ((ch == \"0\" && stream.match(/^[xX][0-9a-fA-F]+/)) || stream.match(/^[0-9]*(\\.[0-9]+)?([eE][~+]?[0-9]+)?/))\n          return \"number\";\n\n        return null;\n      }\n\n      if (ch == \"%\") {\n        stream.skipToEnd();\n        return 'comment';\n      }\n      else if (ch == \"/\") {\n        if (stream.eat(\"*\")) {\n          state.tokenize = tokenComment;\n          return tokenComment(stream, state);\n        }\n      }\n\n      if(singleOperators.test(ch)) {\n        return \"operator\";\n      }\n\n      stream.eatWhile(/\\w/);\n\n      return \"variable\";\n    }\n\n    function tokenClass(stream, state) {\n      if (stream.eatSpace()) {\n        return null;\n      }\n      stream.match(/([A-Z][A-Za-z0-9_]*)|(`.+`)/);\n      state.tokenize = tokenBase;\n      return \"variable-3\"\n    }\n\n    function tokenMeth(stream, state) {\n      if (stream.eatSpace()) {\n        return null;\n      }\n      stream.match(/([a-zA-Z][A-Za-z0-9_]*)|(`.+`)/);\n      state.tokenize = tokenBase;\n      return \"def\"\n    }\n\n    function tokenFunProc(stream, state) {\n      if (stream.eatSpace()) {\n        return null;\n      }\n\n      if(!state.hasPassedFirstStage && stream.eat(\"{\")) {\n        state.hasPassedFirstStage = true;\n        return \"bracket\";\n      }\n      else if(state.hasPassedFirstStage) {\n        stream.match(/([A-Z][A-Za-z0-9_]*)|(`.+`)|\\$/);\n        state.hasPassedFirstStage = false;\n        state.tokenize = tokenBase;\n        return \"def\"\n      }\n      else {\n        state.tokenize = tokenBase;\n        return null;\n      }\n    }\n\n    function tokenComment(stream, state) {\n      var maybeEnd = false, ch;\n      while (ch = stream.next()) {\n        if (ch == \"/\" && maybeEnd) {\n          state.tokenize = tokenBase;\n          break;\n        }\n        maybeEnd = (ch == \"*\");\n      }\n      return \"comment\";\n    }\n\n    function tokenString(quote) {\n      return function (stream, state) {\n        var escaped = false, next, end = false;\n        while ((next = stream.next()) != null) {\n          if (next == quote && !escaped) {\n            end = true;\n            break;\n          }\n          escaped = !escaped && next == \"\\\\\";\n        }\n        if (end || !escaped)\n          state.tokenize = tokenBase;\n        return \"string\";\n      };\n    }\n\n    function buildElectricInputRegEx() {\n      var allClosings = middle.concat(end);\n      return new RegExp(\"[\\\\[\\\\]]|(\" + allClosings.join(\"|\") + \")$\");\n    }\n\n    return {\n\n      startState: function () {\n        return {\n          tokenize: tokenBase,\n          currentIndent: 0,\n          doInCurrentLine: false,\n          hasPassedFirstStage: false\n        };\n      },\n\n      token: function (stream, state) {\n        if (stream.sol())\n          state.doInCurrentLine = 0;\n\n        return state.tokenize(stream, state);\n      },\n\n      indent: function (state, textAfter) {\n        var trueText = textAfter.replace(/^\\s+|\\s+$/g, '');\n\n        if (trueText.match(endKeywords) || trueText.match(middleKeywords) || trueText.match(/(\\[])/))\n          return conf.indentUnit * (state.currentIndent - 1);\n\n        if (state.currentIndent < 0)\n          return 0;\n\n        return state.currentIndent * conf.indentUnit;\n      },\n      fold: \"indent\",\n      electricInput: buildElectricInputRegEx(),\n      lineComment: \"%\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\"\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-oz\", \"oz\");\n\n}"],"names":[],"mappings":"AAAA;AACe,YAAS,UAAU,EAAE;AAEpC;AACA,EAAE,UAAU,CAAC,UAAU,CAAC,IAAI,EAAE,UAAU,IAAI,EAAE;AAC9C;AACA,IAAI,SAAS,UAAU,CAAC,KAAK,EAAE;AAC/B,MAAM,OAAO,IAAI,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,CAAC;AAC7D,KAAK;AACL;AACA,IAAI,IAAI,eAAe,GAAG,2BAA2B,CAAC;AACtD,IAAI,IAAI,eAAe,GAAG,qEAAqE,CAAC;AAChG,IAAI,IAAI,eAAe,GAAG,4BAA4B,CAAC;AACvD;AACA,IAAI,IAAI,MAAM,GAAG,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO;AACrF,MAAM,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;AACnF,IAAI,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;AACtB;AACA,IAAI,IAAI,KAAK,GAAG,UAAU,CAAC,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;AAC7D,IAAI,IAAI,cAAc,GAAG,UAAU,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK;AAC9F,MAAM,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;AACpG,IAAI,IAAI,eAAe,GAAG,UAAU,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK;AACxG,MAAM,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC;AAChG,IAAI,IAAI,cAAc,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;AAC5C,IAAI,IAAI,WAAW,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;AACtC;AACA,IAAI,SAAS,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE;AACtC,MAAM,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAE;AAC7B,QAAQ,OAAO,IAAI,CAAC;AACpB,OAAO;AACP;AACA,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;AAC/B,QAAQ,OAAO,SAAS,CAAC;AACzB,OAAO;AACP;AACA,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;AACjC,QAAQ,OAAO,SAAS;AACxB,OAAO;AACP;AACA,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,EAAE;AAC1E,QAAQ,OAAO,UAAU,CAAC;AAC1B,OAAO;AACP;AACA,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;AAC9B,QAAQ,OAAO,MAAM,CAAC;AACtB,OAAO;AACP;AACA,MAAM,IAAI,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AAClD,MAAM,IAAI,OAAO,EAAE;AACnB,QAAQ,IAAI,CAAC,KAAK,CAAC,eAAe;AAClC,YAAU,KAAK,CAAC,aAAa,EAAE,GAAC;AAChC;AACA,YAAU,KAAK,CAAC,eAAe,GAAG,KAAK,GAAC;AACxC;AACA,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,KAAK;AACtD,YAAU,KAAK,CAAC,QAAQ,GAAG,YAAY,GAAC;AACxC,aAAa,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,OAAO;AACrC,YAAU,KAAK,CAAC,QAAQ,GAAG,UAAU,GAAC;AACtC,aAAa,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;AACpC,YAAU,KAAK,CAAC,QAAQ,GAAG,SAAS,GAAC;AACrC;AACA,QAAQ,OAAO,SAAS,CAAC;AACzB,OAAO;AACP;AACA,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE;AACxE,QAAQ,OAAO,SAAS;AACxB,OAAO;AACP;AACA,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE;AACrC,QAAQ,KAAK,CAAC,aAAa,EAAE,CAAC;AAC9B,QAAQ,OAAO,SAAS,CAAC;AACzB,OAAO;AACP;AACA,MAAM,IAAI,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;AAC7B;AACA,MAAM,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,EAAE;AAClC,QAAQ,KAAK,CAAC,QAAQ,GAAG,WAAW,CAAC,EAAE,CAAC,CAAC;AACzC,QAAQ,OAAO,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC7C,OAAO;AACP;AACA,MAAM,IAAI,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;AAC5B,QAAQ,IAAI,EAAE,IAAI,GAAG,EAAE;AACvB,UAAU,GAAG,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;AAC3C,cAAY,OAAO,IAAI,GAAC;AACxB,eAAe,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,IAAI,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,KAAK,MAAM,CAAC,KAAK,CAAC,sCAAsC,CAAC;AACvI,cAAY,OAAO,QAAQ,GAAC;AAC5B,SAAS;AACT;AACA,QAAQ,IAAI,CAAC,EAAE,IAAI,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,KAAK,MAAM,CAAC,KAAK,CAAC,sCAAsC,CAAC;AACpH,YAAU,OAAO,QAAQ,GAAC;AAC1B;AACA,QAAQ,OAAO,IAAI,CAAC;AACpB,OAAO;AACP;AACA,MAAM,IAAI,EAAE,IAAI,GAAG,EAAE;AACrB,QAAQ,MAAM,CAAC,SAAS,EAAE,CAAC;AAC3B,QAAQ,OAAO,SAAS,CAAC;AACzB,OAAO;AACP,WAAW,IAAI,EAAE,IAAI,GAAG,EAAE;AAC1B,QAAQ,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AAC7B,UAAU,KAAK,CAAC,QAAQ,GAAG,YAAY,CAAC;AACxC,UAAU,OAAO,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC7C,SAAS;AACT,OAAO;AACP;AACA,MAAM,GAAG,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;AACnC,QAAQ,OAAO,UAAU,CAAC;AAC1B,OAAO;AACP;AACA,MAAM,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC5B;AACA,MAAM,OAAO,UAAU,CAAC;AACxB,KAAK;AACL;AACA,IAAI,SAAS,UAAU,CAAC,MAAM,EAAE,KAAK,EAAE;AACvC,MAAM,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAE;AAC7B,QAAQ,OAAO,IAAI,CAAC;AACpB,OAAO;AACP,MAAM,MAAM,CAAC,KAAK,CAAC,6BAA6B,CAAC,CAAC;AAClD,MAAM,KAAK,CAAC,QAAQ,GAAG,SAAS,CAAC;AACjC,MAAM,OAAO,YAAY;AACzB,KAAK;AACL;AACA,IAAI,SAAS,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE;AACtC,MAAM,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAE;AAC7B,QAAQ,OAAO,IAAI,CAAC;AACpB,OAAO;AACP,MAAM,MAAM,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAC;AACrD,MAAM,KAAK,CAAC,QAAQ,GAAG,SAAS,CAAC;AACjC,MAAM,OAAO,KAAK;AAClB,KAAK;AACL;AACA,IAAI,SAAS,YAAY,CAAC,MAAM,EAAE,KAAK,EAAE;AACzC,MAAM,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAE;AAC7B,QAAQ,OAAO,IAAI,CAAC;AACpB,OAAO;AACP;AACA,MAAM,GAAG,CAAC,KAAK,CAAC,mBAAmB,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AACxD,QAAQ,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC;AACzC,QAAQ,OAAO,SAAS,CAAC;AACzB,OAAO;AACP,WAAW,GAAG,KAAK,CAAC,mBAAmB,EAAE;AACzC,QAAQ,MAAM,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAC;AACvD,QAAQ,KAAK,CAAC,mBAAmB,GAAG,KAAK,CAAC;AAC1C,QAAQ,KAAK,CAAC,QAAQ,GAAG,SAAS,CAAC;AACnC,QAAQ,OAAO,KAAK;AACpB,OAAO;AACP,WAAW;AACX,QAAQ,KAAK,CAAC,QAAQ,GAAG,SAAS,CAAC;AACnC,QAAQ,OAAO,IAAI,CAAC;AACpB,OAAO;AACP,KAAK;AACL;AACA,IAAI,SAAS,YAAY,CAAC,MAAM,EAAE,KAAK,EAAE;AACzC,MAAM,IAAI,QAAQ,GAAG,KAAK,EAAE,EAAE,CAAC;AAC/B,MAAM,OAAO,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,EAAE;AACjC,QAAQ,IAAI,EAAE,IAAI,GAAG,IAAI,QAAQ,EAAE;AACnC,UAAU,KAAK,CAAC,QAAQ,GAAG,SAAS,CAAC;AACrC,UAAU,MAAM;AAChB,SAAS;AACT,QAAQ,QAAQ,IAAI,EAAE,IAAI,GAAG,CAAC,CAAC;AAC/B,OAAO;AACP,MAAM,OAAO,SAAS,CAAC;AACvB,KAAK;AACL;AACA,IAAI,SAAS,WAAW,CAAC,KAAK,EAAE;AAChC,MAAM,OAAO,UAAU,MAAM,EAAE,KAAK,EAAE;AACtC,QAAQ,IAAI,OAAO,GAAG,KAAK,EAAE,IAAI,EAAE,GAAG,GAAG,KAAK,CAAC;AAC/C,QAAQ,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,EAAE,KAAK,IAAI,EAAE;AAC/C,UAAU,IAAI,IAAI,IAAI,KAAK,IAAI,CAAC,OAAO,EAAE;AACzC,YAAY,GAAG,GAAG,IAAI,CAAC;AACvB,YAAY,MAAM;AAClB,WAAW;AACX,UAAU,OAAO,GAAG,CAAC,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC;AAC7C,SAAS;AACT,QAAQ,IAAI,GAAG,IAAI,CAAC,OAAO;AAC3B,YAAU,KAAK,CAAC,QAAQ,GAAG,SAAS,GAAC;AACrC,QAAQ,OAAO,QAAQ,CAAC;AACxB,OAAO,CAAC;AACR,KAAK;AACL;AACA,IAAI,SAAS,uBAAuB,GAAG;AACvC,MAAM,IAAI,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAC3C,MAAM,OAAO,IAAI,MAAM,CAAC,YAAY,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;AACrE,KAAK;AACL;AACA,IAAI,OAAO;AACX;AACA,MAAM,UAAU,EAAE,YAAY;AAC9B,QAAQ,OAAO;AACf,UAAU,QAAQ,EAAE,SAAS;AAC7B,UAAU,aAAa,EAAE,CAAC;AAC1B,UAAU,eAAe,EAAE,KAAK;AAChC,UAAU,mBAAmB,EAAE,KAAK;AACpC,SAAS,CAAC;AACV,OAAO;AACP;AACA,MAAM,KAAK,EAAE,UAAU,MAAM,EAAE,KAAK,EAAE;AACtC,QAAQ,IAAI,MAAM,CAAC,GAAG,EAAE;AACxB,YAAU,KAAK,CAAC,eAAe,GAAG,CAAC,GAAC;AACpC;AACA,QAAQ,OAAO,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC7C,OAAO;AACP;AACA,MAAM,MAAM,EAAE,UAAU,KAAK,EAAE,SAAS,EAAE;AAC1C,QAAQ,IAAI,QAAQ,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;AAC3D;AACA,QAAQ,IAAI,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC;AACpG,YAAU,OAAO,IAAI,CAAC,UAAU,IAAI,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,GAAC;AAC7D;AACA,QAAQ,IAAI,KAAK,CAAC,aAAa,GAAG,CAAC;AACnC,YAAU,OAAO,CAAC,GAAC;AACnB;AACA,QAAQ,OAAO,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC;AACrD,OAAO;AACP,MAAM,IAAI,EAAE,QAAQ;AACpB,MAAM,aAAa,EAAE,uBAAuB,EAAE;AAC9C,MAAM,WAAW,EAAE,GAAG;AACtB,MAAM,iBAAiB,EAAE,IAAI;AAC7B,MAAM,eAAe,EAAE,IAAI;AAC3B,KAAK,CAAC;AACN,GAAG,CAAC,CAAC;AACL;AACA,EAAE,UAAU,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;AAC3C;AACA;;;;"}