{"version":3,"file":"octave.js","sources":["../../../../src/mode/octave/octave.js"],"sourcesContent":["// Source: https://github.com/codemirror/CodeMirror/tree/master/mode/octave/octave.js\nexport default function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"octave\", function() {\n    function wordRegexp(words) {\n      return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n    }\n\n    var singleOperators = new RegExp(\"^[\\\\+\\\\-\\\\*/&|\\\\^~<>!@'\\\\\\\\]\");\n    var singleDelimiters = new RegExp('^[\\\\(\\\\[\\\\{\\\\},:=;\\\\.]');\n    var doubleOperators = new RegExp(\"^((==)|(~=)|(<=)|(>=)|(<<)|(>>)|(\\\\.[\\\\+\\\\-\\\\*/\\\\^\\\\\\\\]))\");\n    var doubleDelimiters = new RegExp(\"^((!=)|(\\\\+=)|(\\\\-=)|(\\\\*=)|(/=)|(&=)|(\\\\|=)|(\\\\^=))\");\n    var tripleDelimiters = new RegExp(\"^((>>=)|(<<=))\");\n    var expressionEnd = new RegExp(\"^[\\\\]\\\\)]\");\n    var identifiers = new RegExp(\"^[_A-Za-z\\xa1-\\uffff][_A-Za-z0-9\\xa1-\\uffff]*\");\n\n    var builtins = wordRegexp([\n      'error', 'eval', 'function', 'abs', 'acos', 'atan', 'asin', 'cos',\n      'cosh', 'exp', 'log', 'prod', 'sum', 'log10', 'max', 'min', 'sign', 'sin', 'sinh',\n      'sqrt', 'tan', 'reshape', 'break', 'zeros', 'default', 'margin', 'round', 'ones',\n      'rand', 'syn', 'ceil', 'floor', 'size', 'clear', 'zeros', 'eye', 'mean', 'std', 'cov',\n      'det', 'eig', 'inv', 'norm', 'rank', 'trace', 'expm', 'logm', 'sqrtm', 'linspace', 'plot',\n      'title', 'xlabel', 'ylabel', 'legend', 'text', 'grid', 'meshgrid', 'mesh', 'num2str',\n      'fft', 'ifft', 'arrayfun', 'cellfun', 'input', 'fliplr', 'flipud', 'ismember'\n    ]);\n\n    var keywords = wordRegexp([\n      'return', 'case', 'switch', 'else', 'elseif', 'end', 'endif', 'endfunction',\n      'if', 'otherwise', 'do', 'for', 'while', 'try', 'catch', 'classdef', 'properties', 'events',\n      'methods', 'global', 'persistent', 'endfor', 'endwhile', 'printf', 'sprintf', 'disp', 'until',\n      'continue', 'pkg'\n    ]);\n\n\n    function tokenTranspose(stream, state) {\n      if (!stream.sol() && stream.peek() === '\\'') {\n        stream.next();\n        state.tokenize = tokenBase;\n        return 'operator';\n      }\n      state.tokenize = tokenBase;\n      return tokenBase(stream, state);\n    }\n\n\n    function tokenComment(stream, state) {\n      if (stream.match(/^.*%}/)) {\n        state.tokenize = tokenBase;\n        return 'comment';\n      };\n      stream.skipToEnd();\n      return 'comment';\n    }\n\n    function tokenBase(stream, state) {\n      if (stream.eatSpace()) return null;\n\n      if (stream.match('%{')){\n        state.tokenize = tokenComment;\n        stream.skipToEnd();\n        return 'comment';\n      }\n\n      if (stream.match(/^[%#]/)){\n        stream.skipToEnd();\n        return 'comment';\n      }\n\n      if (stream.match(/^[0-9\\.+-]/, false)) {\n        if (stream.match(/^[+-]?0x[0-9a-fA-F]+[ij]?/)) {\n          stream.tokenize = tokenBase;\n          return 'number'; };\n        if (stream.match(/^[+-]?\\d*\\.\\d+([EeDd][+-]?\\d+)?[ij]?/)) { return 'number'; };\n        if (stream.match(/^[+-]?\\d+([EeDd][+-]?\\d+)?[ij]?/)) { return 'number'; };\n      }\n      if (stream.match(wordRegexp(['nan','NaN','inf','Inf']))) { return 'number'; };\n\n      var m = stream.match(/^\"(?:[^\"]|\"\")*(\"|$)/) || stream.match(/^'(?:[^']|'')*('|$)/)\n      if (m) { return m[1] ? 'string' : \"string error\"; }\n\n      if (stream.match(keywords)) { return 'keyword'; } ;\n      if (stream.match(builtins)) { return 'builtin'; } ;\n      if (stream.match(identifiers)) { return 'variable'; } ;\n\n      if (stream.match(singleOperators) || stream.match(doubleOperators)) { return 'operator'; };\n      if (stream.match(singleDelimiters) || stream.match(doubleDelimiters) || stream.match(tripleDelimiters)) { return null; };\n\n      if (stream.match(expressionEnd)) {\n        state.tokenize = tokenTranspose;\n        return null;\n      };\n\n\n      stream.next();\n      return 'error';\n    };\n\n\n    return {\n      startState: function() {\n        return {\n          tokenize: tokenBase\n        };\n      },\n\n      token: function(stream, state) {\n        var style = state.tokenize(stream, state);\n        if (style === 'number' || style === 'variable'){\n          state.tokenize = tokenTranspose;\n        }\n        return style;\n      },\n\n      lineComment: '%',\n\n      fold: 'indent'\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-octave\", \"octave\");\n\n}"],"names":[],"mappings":"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"}