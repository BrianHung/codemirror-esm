{"version":3,"file":"scheme.js","sources":["../../../../src/mode/scheme/scheme.js"],"sourcesContent":["// Source: https://github.com/codemirror/CodeMirror/tree/master/mode/scheme/scheme.js\nexport default function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"scheme\", function () {\n    var BUILTIN = \"builtin\", COMMENT = \"comment\", STRING = \"string\",\n      ATOM = \"atom\", NUMBER = \"number\", BRACKET = \"bracket\";\n    var INDENT_WORD_SKIP = 2;\n\n    function makeKeywords(str) {\n      var obj = {}, words = str.split(\" \");\n      for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n      return obj;\n    }\n\n    var keywords = makeKeywords(\"Î» case-lambda call/cc class define-class exit-handler field import inherit init-field interface let*-values let-values let/ec mixin opt-lambda override protect provide public rename require require-for-syntax syntax syntax-case syntax-error unit/sig unless when with-syntax and begin call-with-current-continuation call-with-input-file call-with-output-file case cond define define-syntax define-macro defmacro delay do dynamic-wind else for-each if lambda let let* let-syntax letrec letrec-syntax map or syntax-rules abs acos angle append apply asin assoc assq assv atan boolean? caar cadr call-with-input-file call-with-output-file call-with-values car cdddar cddddr cdr ceiling char->integer char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? char-downcase char-lower-case? char-numeric? char-ready? char-upcase char-upper-case? char-whitespace? char<=? char<? char=? char>=? char>? char? close-input-port close-output-port complex? cons cos current-input-port current-output-port denominator display eof-object? eq? equal? eqv? eval even? exact->inexact exact? exp expt #f floor force gcd imag-part inexact->exact inexact? input-port? integer->char integer? interaction-environment lcm length list list->string list->vector list-ref list-tail list? load log magnitude make-polar make-rectangular make-string make-vector max member memq memv min modulo negative? newline not null-environment null? number->string number? numerator odd? open-input-file open-output-file output-port? pair? peek-char port? positive? procedure? quasiquote quote quotient rational? rationalize read read-char real-part real? remainder reverse round scheme-report-environment set! set-car! set-cdr! sin sqrt string string->list string->number string->symbol string-append string-ci<=? string-ci<? string-ci=? string-ci>=? string-ci>? string-copy string-fill! string-length string-ref string-set! string<=? string<? string=? string>=? string>? string? substring symbol->string symbol? #t tan transcript-off transcript-on truncate values vector vector->list vector-fill! vector-length vector-ref vector-set! with-input-from-file with-output-to-file write write-char zero?\");\n    var indentKeys = makeKeywords(\"define let letrec let* lambda define-macro defmacro let-syntax letrec-syntax define-syntax syntax-rules\");\n\n    function stateStack(indent, type, prev) { \n      this.indent = indent;\n      this.type = type;\n      this.prev = prev;\n    }\n\n    function pushStack(state, indent, type) {\n      state.indentStack = new stateStack(indent, type, state.indentStack);\n    }\n\n    function popStack(state) {\n      state.indentStack = state.indentStack.prev;\n    }\n\n    var binaryMatcher = new RegExp(/^(?:[-+]i|[-+][01]+#*(?:\\/[01]+#*)?i|[-+]?[01]+#*(?:\\/[01]+#*)?@[-+]?[01]+#*(?:\\/[01]+#*)?|[-+]?[01]+#*(?:\\/[01]+#*)?[-+](?:[01]+#*(?:\\/[01]+#*)?)?i|[-+]?[01]+#*(?:\\/[01]+#*)?)(?=[()\\s;\"]|$)/i);\n    var octalMatcher = new RegExp(/^(?:[-+]i|[-+][0-7]+#*(?:\\/[0-7]+#*)?i|[-+]?[0-7]+#*(?:\\/[0-7]+#*)?@[-+]?[0-7]+#*(?:\\/[0-7]+#*)?|[-+]?[0-7]+#*(?:\\/[0-7]+#*)?[-+](?:[0-7]+#*(?:\\/[0-7]+#*)?)?i|[-+]?[0-7]+#*(?:\\/[0-7]+#*)?)(?=[()\\s;\"]|$)/i);\n    var hexMatcher = new RegExp(/^(?:[-+]i|[-+][\\da-f]+#*(?:\\/[\\da-f]+#*)?i|[-+]?[\\da-f]+#*(?:\\/[\\da-f]+#*)?@[-+]?[\\da-f]+#*(?:\\/[\\da-f]+#*)?|[-+]?[\\da-f]+#*(?:\\/[\\da-f]+#*)?[-+](?:[\\da-f]+#*(?:\\/[\\da-f]+#*)?)?i|[-+]?[\\da-f]+#*(?:\\/[\\da-f]+#*)?)(?=[()\\s;\"]|$)/i);\n    var decimalMatcher = new RegExp(/^(?:[-+]i|[-+](?:(?:(?:\\d+#+\\.?#*|\\d+\\.\\d*#*|\\.\\d+#*|\\d+)(?:[esfdl][-+]?\\d+)?)|\\d+#*\\/\\d+#*)i|[-+]?(?:(?:(?:\\d+#+\\.?#*|\\d+\\.\\d*#*|\\.\\d+#*|\\d+)(?:[esfdl][-+]?\\d+)?)|\\d+#*\\/\\d+#*)@[-+]?(?:(?:(?:\\d+#+\\.?#*|\\d+\\.\\d*#*|\\.\\d+#*|\\d+)(?:[esfdl][-+]?\\d+)?)|\\d+#*\\/\\d+#*)|[-+]?(?:(?:(?:\\d+#+\\.?#*|\\d+\\.\\d*#*|\\.\\d+#*|\\d+)(?:[esfdl][-+]?\\d+)?)|\\d+#*\\/\\d+#*)[-+](?:(?:(?:\\d+#+\\.?#*|\\d+\\.\\d*#*|\\.\\d+#*|\\d+)(?:[esfdl][-+]?\\d+)?)|\\d+#*\\/\\d+#*)?i|(?:(?:(?:\\d+#+\\.?#*|\\d+\\.\\d*#*|\\.\\d+#*|\\d+)(?:[esfdl][-+]?\\d+)?)|\\d+#*\\/\\d+#*))(?=[()\\s;\"]|$)/i);\n\n    function isBinaryNumber (stream) {\n      return stream.match(binaryMatcher);\n    }\n\n    function isOctalNumber (stream) {\n      return stream.match(octalMatcher);\n    }\n\n    function isDecimalNumber (stream, backup) {\n      if (backup === true) {\n        stream.backUp(1);\n      }\n      return stream.match(decimalMatcher);\n    }\n\n    function isHexNumber (stream) {\n      return stream.match(hexMatcher);\n    }\n\n    return {\n      startState: function () {\n        return {\n          indentStack: null,\n          indentation: 0,\n          mode: false,\n          sExprComment: false,\n          sExprQuote: false\n        };\n      },\n\n      token: function (stream, state) {\n        if (state.indentStack == null && stream.sol()) {\n          state.indentation = stream.indentation();\n        }\n\n        if (stream.eatSpace()) {\n          return null;\n        }\n        var returnType = null;\n\n        switch(state.mode){\n        case \"string\": \n          var next, escaped = false;\n          while ((next = stream.next()) != null) {\n            if (next == \"\\\"\" && !escaped) {\n\n              state.mode = false;\n              break;\n            }\n            escaped = !escaped && next == \"\\\\\";\n          }\n          returnType = STRING; \n          break;\n        case \"comment\": \n          var next, maybeEnd = false;\n          while ((next = stream.next()) != null) {\n            if (next == \"#\" && maybeEnd) {\n\n              state.mode = false;\n              break;\n            }\n            maybeEnd = (next == \"|\");\n          }\n          returnType = COMMENT;\n          break;\n        case \"s-expr-comment\": \n          state.mode = false;\n          if(stream.peek() == \"(\" || stream.peek() == \"[\"){\n            state.sExprComment = 0;\n          }else{\n            stream.eatWhile(/[^\\s\\(\\)\\[\\]]/); \n            returnType = COMMENT;\n            break;\n          }\n        default: \n          var ch = stream.next();\n\n          if (ch == \"\\\"\") {\n            state.mode = \"string\";\n            returnType = STRING;\n\n          } else if (ch == \"'\") {\n            if (stream.peek() == \"(\" || stream.peek() == \"[\"){\n              if (typeof state.sExprQuote != \"number\") {\n                state.sExprQuote = 0;\n              } \n              returnType = ATOM;\n            } else {\n              stream.eatWhile(/[\\w_\\-!$%&*+\\.\\/:<=>?@\\^~]/);\n              returnType = ATOM;\n            }\n          } else if (ch == '#') {\n            if (stream.eat(\"|\")) {                    \n              state.mode = \"comment\"; \n              returnType = COMMENT;\n            } else if (stream.eat(/[tf]/i)) {            \n              returnType = ATOM;\n            } else if (stream.eat(';')) {                \n              state.mode = \"s-expr-comment\";\n              returnType = COMMENT;\n            } else {\n              var numTest = null, hasExactness = false, hasRadix = true;\n              if (stream.eat(/[ei]/i)) {\n                hasExactness = true;\n              } else {\n                stream.backUp(1);       \n              }\n              if (stream.match(/^#b/i)) {\n                numTest = isBinaryNumber;\n              } else if (stream.match(/^#o/i)) {\n                numTest = isOctalNumber;\n              } else if (stream.match(/^#x/i)) {\n                numTest = isHexNumber;\n              } else if (stream.match(/^#d/i)) {\n                numTest = isDecimalNumber;\n              } else if (stream.match(/^[-+0-9.]/, false)) {\n                hasRadix = false;\n                numTest = isDecimalNumber;\n              } else if (!hasExactness) {\n                stream.eat('#');\n              }\n              if (numTest != null) {\n                if (hasRadix && !hasExactness) {\n                  stream.match(/^#[ei]/i);\n                }\n                if (numTest(stream))\n                  returnType = NUMBER;\n              }\n            }\n          } else if (/^[-+0-9.]/.test(ch) && isDecimalNumber(stream, true)) { \n            returnType = NUMBER;\n          } else if (ch == \";\") { \n            stream.skipToEnd(); \n            returnType = COMMENT;\n          } else if (ch == \"(\" || ch == \"[\") {\n            var keyWord = ''; var indentTemp = stream.column(), letter;\n\n            while ((letter = stream.eat(/[^\\s\\(\\[\\;\\)\\]]/)) != null) {\n              keyWord += letter;\n            }\n\n            if (keyWord.length > 0 && indentKeys.propertyIsEnumerable(keyWord)) { \n\n              pushStack(state, indentTemp + INDENT_WORD_SKIP, ch);\n            } else { \n              stream.eatSpace();\n              if (stream.eol() || stream.peek() == \";\") {\n                pushStack(state, indentTemp + 1, ch);\n              } else {\n                pushStack(state, indentTemp + stream.current().length, ch); \n              }\n            }\n            stream.backUp(stream.current().length - 1); \n\n            if(typeof state.sExprComment == \"number\") state.sExprComment++;\n            if(typeof state.sExprQuote == \"number\") state.sExprQuote++;\n\n            returnType = BRACKET;\n          } else if (ch == \")\" || ch == \"]\") {\n            returnType = BRACKET;\n            if (state.indentStack != null && state.indentStack.type == (ch == \")\" ? \"(\" : \"[\")) {\n              popStack(state);\n\n              if(typeof state.sExprComment == \"number\"){\n                if(--state.sExprComment == 0){\n                  returnType = COMMENT; \n                  state.sExprComment = false; \n                }\n              }\n              if(typeof state.sExprQuote == \"number\"){\n                if(--state.sExprQuote == 0){\n                  returnType = ATOM; \n                  state.sExprQuote = false; \n                }\n              }\n            }\n          } else {\n            stream.eatWhile(/[\\w_\\-!$%&*+\\.\\/:<=>?@\\^~]/);\n\n            if (keywords && keywords.propertyIsEnumerable(stream.current())) {\n              returnType = BUILTIN;\n            } else returnType = \"variable\";\n          }\n        }\n        return (typeof state.sExprComment == \"number\") ? COMMENT : ((typeof state.sExprQuote == \"number\") ? ATOM : returnType);\n      },\n\n      indent: function (state) {\n        if (state.indentStack == null) return state.indentation;\n        return state.indentStack.indent;\n      },\n\n      closeBrackets: {pairs: \"()[]{}\\\"\\\"\"},\n      lineComment: \";;\"\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-scheme\", \"scheme\");\n\n}"],"names":[],"mappings":"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"}