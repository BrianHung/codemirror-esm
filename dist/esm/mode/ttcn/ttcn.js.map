{"version":3,"file":"ttcn.js","sources":["../../../../src/mode/ttcn/ttcn.js"],"sourcesContent":["// Source: https://github.com/codemirror/CodeMirror/tree/master/mode/ttcn/ttcn.js\nexport default function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"ttcn\", function(config, parserConfig) {\n    var indentUnit = config.indentUnit,\n      keywords = parserConfig.keywords || {},\n      builtin = parserConfig.builtin || {},\n      timerOps = parserConfig.timerOps || {},\n      portOps  = parserConfig.portOps || {},\n      configOps = parserConfig.configOps || {},\n      verdictOps = parserConfig.verdictOps || {},\n      sutOps = parserConfig.sutOps || {},\n      functionOps = parserConfig.functionOps || {},\n\n      verdictConsts = parserConfig.verdictConsts || {},\n      booleanConsts = parserConfig.booleanConsts || {},\n      otherConsts   = parserConfig.otherConsts || {},\n\n      types = parserConfig.types || {},\n      visibilityModifiers = parserConfig.visibilityModifiers || {},\n      templateMatch = parserConfig.templateMatch || {},\n      multiLineStrings = parserConfig.multiLineStrings,\n      indentStatements = parserConfig.indentStatements !== false;\n    var isOperatorChar = /[+\\-*&@=<>!\\/]/;\n    var curPunc;\n\n    function tokenBase(stream, state) {\n      var ch = stream.next();\n\n      if (ch == '\"' || ch == \"'\") {\n        state.tokenize = tokenString(ch);\n        return state.tokenize(stream, state);\n      }\n      if (/[\\[\\]{}\\(\\),;\\\\:\\?\\.]/.test(ch)) {\n        curPunc = ch;\n        return \"punctuation\";\n      }\n      if (ch == \"#\"){\n        stream.skipToEnd();\n        return \"atom preprocessor\";\n      }\n      if (ch == \"%\"){\n        stream.eatWhile(/\\b/);\n        return \"atom ttcn3Macros\";\n      }\n      if (/\\d/.test(ch)) {\n        stream.eatWhile(/[\\w\\.]/);\n        return \"number\";\n      }\n      if (ch == \"/\") {\n        if (stream.eat(\"*\")) {\n          state.tokenize = tokenComment;\n          return tokenComment(stream, state);\n        }\n        if (stream.eat(\"/\")) {\n          stream.skipToEnd();\n          return \"comment\";\n        }\n      }\n      if (isOperatorChar.test(ch)) {\n        if(ch == \"@\"){\n          if(stream.match(\"try\") || stream.match(\"catch\")\n              || stream.match(\"lazy\")){\n            return \"keyword\";\n          }\n        }\n        stream.eatWhile(isOperatorChar);\n        return \"operator\";\n      }\n      stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n      var cur = stream.current();\n\n      if (keywords.propertyIsEnumerable(cur)) return \"keyword\";\n      if (builtin.propertyIsEnumerable(cur)) return \"builtin\";\n\n      if (timerOps.propertyIsEnumerable(cur)) return \"def timerOps\";\n      if (configOps.propertyIsEnumerable(cur)) return \"def configOps\";\n      if (verdictOps.propertyIsEnumerable(cur)) return \"def verdictOps\";\n      if (portOps.propertyIsEnumerable(cur)) return \"def portOps\";\n      if (sutOps.propertyIsEnumerable(cur)) return \"def sutOps\";\n      if (functionOps.propertyIsEnumerable(cur)) return \"def functionOps\";\n\n      if (verdictConsts.propertyIsEnumerable(cur)) return \"string verdictConsts\";\n      if (booleanConsts.propertyIsEnumerable(cur)) return \"string booleanConsts\";\n      if (otherConsts.propertyIsEnumerable(cur)) return \"string otherConsts\";\n\n      if (types.propertyIsEnumerable(cur)) return \"builtin types\";\n      if (visibilityModifiers.propertyIsEnumerable(cur))\n        return \"builtin visibilityModifiers\";\n      if (templateMatch.propertyIsEnumerable(cur)) return \"atom templateMatch\";\n\n      return \"variable\";\n    }\n\n    function tokenString(quote) {\n      return function(stream, state) {\n        var escaped = false, next, end = false;\n        while ((next = stream.next()) != null) {\n          if (next == quote && !escaped){\n            var afterQuote = stream.peek();\n            if (afterQuote){\n              afterQuote = afterQuote.toLowerCase();\n              if(afterQuote == \"b\" || afterQuote == \"h\" || afterQuote == \"o\")\n                stream.next();\n            }\n            end = true; break;\n          }\n          escaped = !escaped && next == \"\\\\\";\n        }\n        if (end || !(escaped || multiLineStrings))\n          state.tokenize = null;\n        return \"string\";\n      };\n    }\n\n    function tokenComment(stream, state) {\n      var maybeEnd = false, ch;\n      while (ch = stream.next()) {\n        if (ch == \"/\" && maybeEnd) {\n          state.tokenize = null;\n          break;\n        }\n        maybeEnd = (ch == \"*\");\n      }\n      return \"comment\";\n    }\n\n    function Context(indented, column, type, align, prev) {\n      this.indented = indented;\n      this.column = column;\n      this.type = type;\n      this.align = align;\n      this.prev = prev;\n    }\n\n    function pushContext(state, col, type) {\n      var indent = state.indented;\n      if (state.context && state.context.type == \"statement\")\n        indent = state.context.indented;\n      return state.context = new Context(indent, col, type, null, state.context);\n    }\n\n    function popContext(state) {\n      var t = state.context.type;\n      if (t == \")\" || t == \"]\" || t == \"}\")\n        state.indented = state.context.indented;\n      return state.context = state.context.prev;\n    }\n\n    return {\n      startState: function(basecolumn) {\n        return {\n          tokenize: null,\n          context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", false),\n          indented: 0,\n          startOfLine: true\n        };\n      },\n\n      token: function(stream, state) {\n        var ctx = state.context;\n        if (stream.sol()) {\n          if (ctx.align == null) ctx.align = false;\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n        }\n        if (stream.eatSpace()) return null;\n        curPunc = null;\n        var style = (state.tokenize || tokenBase)(stream, state);\n        if (style == \"comment\") return style;\n        if (ctx.align == null) ctx.align = true;\n\n        if ((curPunc == \";\" || curPunc == \":\" || curPunc == \",\")\n            && ctx.type == \"statement\"){\n          popContext(state);\n        }\n        else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n        else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n        else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n        else if (curPunc == \"}\") {\n          while (ctx.type == \"statement\") ctx = popContext(state);\n          if (ctx.type == \"}\") ctx = popContext(state);\n          while (ctx.type == \"statement\") ctx = popContext(state);\n        }\n        else if (curPunc == ctx.type) popContext(state);\n        else if (indentStatements &&\n            (((ctx.type == \"}\" || ctx.type == \"top\") && curPunc != ';') ||\n            (ctx.type == \"statement\" && curPunc == \"newstatement\")))\n          pushContext(state, stream.column(), \"statement\");\n\n        state.startOfLine = false;\n\n        return style;\n      },\n\n      electricChars: \"{}\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      lineComment: \"//\",\n      fold: \"brace\"\n    };\n  });\n\n  function words(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n\n  function def(mimes, mode) {\n    if (typeof mimes == \"string\") mimes = [mimes];\n    var words = [];\n    function add(obj) {\n      if (obj) for (var prop in obj) if (obj.hasOwnProperty(prop))\n        words.push(prop);\n    }\n\n    add(mode.keywords);\n    add(mode.builtin);\n    add(mode.timerOps);\n    add(mode.portOps);\n\n    if (words.length) {\n      mode.helperType = mimes[0];\n      CodeMirror.registerHelper(\"hintWords\", mimes[0], words);\n    }\n\n    for (var i = 0; i < mimes.length; ++i)\n      CodeMirror.defineMIME(mimes[i], mode);\n  }\n\n  def([\"text/x-ttcn\", \"text/x-ttcn3\", \"text/x-ttcnpp\"], {\n    name: \"ttcn\",\n    keywords: words(\"activate address alive all alt altstep and and4b any\" +\n    \" break case component const continue control deactivate\" +\n    \" display do else encode enumerated except exception\" +\n    \" execute extends extension external for from function\" +\n    \" goto group if import in infinity inout interleave\" +\n    \" label language length log match message mixed mod\" +\n    \" modifies module modulepar mtc noblock not not4b nowait\" +\n    \" of on optional or or4b out override param pattern port\" +\n    \" procedure record recursive rem repeat return runs select\" +\n    \" self sender set signature system template testcase to\" +\n    \" type union value valueof var variant while with xor xor4b\"),\n    builtin: words(\"bit2hex bit2int bit2oct bit2str char2int char2oct encvalue\" +\n    \" decomp decvalue float2int float2str hex2bit hex2int\" +\n    \" hex2oct hex2str int2bit int2char int2float int2hex\" +\n    \" int2oct int2str int2unichar isbound ischosen ispresent\" +\n    \" isvalue lengthof log2str oct2bit oct2char oct2hex oct2int\" +\n    \" oct2str regexp replace rnd sizeof str2bit str2float\" +\n    \" str2hex str2int str2oct substr unichar2int unichar2char\" +\n    \" enum2int\"),\n    types: words(\"anytype bitstring boolean char charstring default float\" +\n    \" hexstring integer objid octetstring universal verdicttype timer\"),\n    timerOps: words(\"read running start stop timeout\"),\n    portOps: words(\"call catch check clear getcall getreply halt raise receive\" +\n    \" reply send trigger\"),\n    configOps: words(\"create connect disconnect done kill killed map unmap\"),\n    verdictOps: words(\"getverdict setverdict\"),\n    sutOps: words(\"action\"),\n    functionOps: words(\"apply derefers refers\"),\n\n    verdictConsts: words(\"error fail inconc none pass\"),\n    booleanConsts: words(\"true false\"),\n    otherConsts: words(\"null NULL omit\"),\n\n    visibilityModifiers: words(\"private public friend\"),\n    templateMatch: words(\"complement ifpresent subset superset permutation\"),\n    multiLineStrings: true\n  });\n}"],"names":[],"mappings":"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"}