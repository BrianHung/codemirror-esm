{"version":3,"file":"rst.js","sources":["../../../../src/mode/rst/rst.js"],"sourcesContent":["// Source: https://github.com/codemirror/CodeMirror/tree/master/mode/rst/rst.js\nimport python from \"../python/python\"\nimport stex from \"../stex/stex\"\nimport overlay from \"../../addon/mode/overlay\"\nexport default function(CodeMirror) {\n  python(CodeMirror)\n  stex(CodeMirror)\n  overlay(CodeMirror)\n  \"use strict\";\n\n  CodeMirror.defineMode('rst', function (config, options) {\n\n    var rx_strong = /^\\*\\*[^\\*\\s](?:[^\\*]*[^\\*\\s])?\\*\\*/;\n    var rx_emphasis = /^\\*[^\\*\\s](?:[^\\*]*[^\\*\\s])?\\*/;\n    var rx_literal = /^``[^`\\s](?:[^`]*[^`\\s])``/;\n\n    var rx_number = /^(?:[\\d]+(?:[\\.,]\\d+)*)/;\n    var rx_positive = /^(?:\\s\\+[\\d]+(?:[\\.,]\\d+)*)/;\n    var rx_negative = /^(?:\\s\\-[\\d]+(?:[\\.,]\\d+)*)/;\n\n    var rx_uri_protocol = \"[Hh][Tt][Tt][Pp][Ss]?://\";\n    var rx_uri_domain = \"(?:[\\\\d\\\\w.-]+)\\\\.(?:\\\\w{2,6})\";\n    var rx_uri_path = \"(?:/[\\\\d\\\\w\\\\#\\\\%\\\\&\\\\-\\\\.\\\\,\\\\/\\\\:\\\\=\\\\?\\\\~]+)*\";\n    var rx_uri = new RegExp(\"^\" + rx_uri_protocol + rx_uri_domain + rx_uri_path);\n\n    var overlay = {\n      token: function (stream) {\n\n        if (stream.match(rx_strong) && stream.match (/\\W+|$/, false))\n          return 'strong';\n        if (stream.match(rx_emphasis) && stream.match (/\\W+|$/, false))\n          return 'em';\n        if (stream.match(rx_literal) && stream.match (/\\W+|$/, false))\n          return 'string-2';\n        if (stream.match(rx_number))\n          return 'number';\n        if (stream.match(rx_positive))\n          return 'positive';\n        if (stream.match(rx_negative))\n          return 'negative';\n        if (stream.match(rx_uri))\n          return 'link';\n\n        while (stream.next() != null) {\n          if (stream.match(rx_strong, false)) break;\n          if (stream.match(rx_emphasis, false)) break;\n          if (stream.match(rx_literal, false)) break;\n          if (stream.match(rx_number, false)) break;\n          if (stream.match(rx_positive, false)) break;\n          if (stream.match(rx_negative, false)) break;\n          if (stream.match(rx_uri, false)) break;\n        }\n\n        return null;\n      }\n    };\n\n    var mode = CodeMirror.getMode(\n      config, options.backdrop || 'rst-base'\n    );\n\n    return CodeMirror.overlayMode(mode, overlay, true); \n  }, 'python', 'stex');\n\n\n  CodeMirror.defineMode('rst-base', function (config) {\n\n\n    function format(string) {\n      var args = Array.prototype.slice.call(arguments, 1);\n      return string.replace(/{(\\d+)}/g, function (match, n) {\n        return typeof args[n] != 'undefined' ? args[n] : match;\n      });\n    }\n\n\n    var mode_python = CodeMirror.getMode(config, 'python');\n    var mode_stex = CodeMirror.getMode(config, 'stex');\n\n\n    var SEPA = \"\\\\s+\";\n    var TAIL = \"(?:\\\\s*|\\\\W|$)\",\n      rx_TAIL = new RegExp(format('^{0}', TAIL));\n\n    var NAME =\n    \"(?:[^\\\\W\\\\d_](?:[\\\\w!\\\"#$%&'()\\\\*\\\\+,\\\\-\\\\.\\/:;<=>\\\\?]*[^\\\\W_])?)\",\n      rx_NAME = new RegExp(format('^{0}', NAME));\n    var NAME_WWS =\n    \"(?:[^\\\\W\\\\d_](?:[\\\\w\\\\s!\\\"#$%&'()\\\\*\\\\+,\\\\-\\\\.\\/:;<=>\\\\?]*[^\\\\W_])?)\";\n    var REF_NAME = format('(?:{0}|`{1}`)', NAME, NAME_WWS);\n\n    var TEXT1 = \"(?:[^\\\\s\\\\|](?:[^\\\\|]*[^\\\\s\\\\|])?)\";\n    var TEXT2 = \"(?:[^\\\\`]+)\",\n      rx_TEXT2 = new RegExp(format('^{0}', TEXT2));\n\n    var rx_section = new RegExp(\n      \"^([!'#$%&\\\"()*+,-./:;<=>?@\\\\[\\\\\\\\\\\\]^_`{|}~])\\\\1{3,}\\\\s*$\");\n    var rx_explicit = new RegExp(\n      format('^\\\\.\\\\.{0}', SEPA));\n    var rx_link = new RegExp(\n      format('^_{0}:{1}|^__:{1}', REF_NAME, TAIL));\n    var rx_directive = new RegExp(\n      format('^{0}::{1}', REF_NAME, TAIL));\n    var rx_substitution = new RegExp(\n      format('^\\\\|{0}\\\\|{1}{2}::{3}', TEXT1, SEPA, REF_NAME, TAIL));\n    var rx_footnote = new RegExp(\n      format('^\\\\[(?:\\\\d+|#{0}?|\\\\*)]{1}', REF_NAME, TAIL));\n    var rx_citation = new RegExp(\n      format('^\\\\[{0}\\\\]{1}', REF_NAME, TAIL));\n\n    var rx_substitution_ref = new RegExp(\n      format('^\\\\|{0}\\\\|', TEXT1));\n    var rx_footnote_ref = new RegExp(\n      format('^\\\\[(?:\\\\d+|#{0}?|\\\\*)]_', REF_NAME));\n    var rx_citation_ref = new RegExp(\n      format('^\\\\[{0}\\\\]_', REF_NAME));\n    var rx_link_ref1 = new RegExp(\n      format('^{0}__?', REF_NAME));\n    var rx_link_ref2 = new RegExp(\n      format('^`{0}`_', TEXT2));\n\n    var rx_role_pre = new RegExp(\n      format('^:{0}:`{1}`{2}', NAME, TEXT2, TAIL));\n    var rx_role_suf = new RegExp(\n      format('^`{1}`:{0}:{2}', NAME, TEXT2, TAIL));\n    var rx_role = new RegExp(\n      format('^:{0}:{1}', NAME, TAIL));\n\n    var rx_directive_name = new RegExp(format('^{0}', REF_NAME));\n    var rx_directive_tail = new RegExp(format('^::{0}', TAIL));\n    var rx_substitution_text = new RegExp(format('^\\\\|{0}\\\\|', TEXT1));\n    var rx_substitution_sepa = new RegExp(format('^{0}', SEPA));\n    var rx_substitution_name = new RegExp(format('^{0}', REF_NAME));\n    var rx_substitution_tail = new RegExp(format('^::{0}', TAIL));\n    var rx_link_head = new RegExp(\"^_\");\n    var rx_link_name = new RegExp(format('^{0}|_', REF_NAME));\n    var rx_link_tail = new RegExp(format('^:{0}', TAIL));\n\n    var rx_verbatim = new RegExp('^::\\\\s*$');\n    var rx_examples = new RegExp('^\\\\s+(?:>>>|In \\\\[\\\\d+\\\\]:)\\\\s');\n\n\n    function to_normal(stream, state) {\n      var token = null;\n\n      if (stream.sol() && stream.match(rx_examples, false)) {\n        change(state, to_mode, {\n          mode: mode_python, local: CodeMirror.startState(mode_python)\n        });\n      } else if (stream.sol() && stream.match(rx_explicit)) {\n        change(state, to_explicit);\n        token = 'meta';\n      } else if (stream.sol() && stream.match(rx_section)) {\n        change(state, to_normal);\n        token = 'header';\n      } else if (phase(state) == rx_role_pre ||\n               stream.match(rx_role_pre, false)) {\n\n        switch (stage(state)) {\n        case 0:\n          change(state, to_normal, context(rx_role_pre, 1));\n          stream.match(/^:/);\n          token = 'meta';\n          break;\n        case 1:\n          change(state, to_normal, context(rx_role_pre, 2));\n          stream.match(rx_NAME);\n          token = 'keyword';\n\n          if (stream.current().match(/^(?:math|latex)/)) {\n            state.tmp_stex = true;\n          }\n          break;\n        case 2:\n          change(state, to_normal, context(rx_role_pre, 3));\n          stream.match(/^:`/);\n          token = 'meta';\n          break;\n        case 3:\n          if (state.tmp_stex) {\n            state.tmp_stex = undefined; state.tmp = {\n              mode: mode_stex, local: CodeMirror.startState(mode_stex)\n            };\n          }\n\n          if (state.tmp) {\n            if (stream.peek() == '`') {\n              change(state, to_normal, context(rx_role_pre, 4));\n              state.tmp = undefined;\n              break;\n            }\n\n            token = state.tmp.mode.token(stream, state.tmp.local);\n            break;\n          }\n\n          change(state, to_normal, context(rx_role_pre, 4));\n          stream.match(rx_TEXT2);\n          token = 'string';\n          break;\n        case 4:\n          change(state, to_normal, context(rx_role_pre, 5));\n          stream.match(/^`/);\n          token = 'meta';\n          break;\n        case 5:\n          change(state, to_normal, context(rx_role_pre, 6));\n          stream.match(rx_TAIL);\n          break;\n        default:\n          change(state, to_normal);\n        }\n      } else if (phase(state) == rx_role_suf ||\n               stream.match(rx_role_suf, false)) {\n\n        switch (stage(state)) {\n        case 0:\n          change(state, to_normal, context(rx_role_suf, 1));\n          stream.match(/^`/);\n          token = 'meta';\n          break;\n        case 1:\n          change(state, to_normal, context(rx_role_suf, 2));\n          stream.match(rx_TEXT2);\n          token = 'string';\n          break;\n        case 2:\n          change(state, to_normal, context(rx_role_suf, 3));\n          stream.match(/^`:/);\n          token = 'meta';\n          break;\n        case 3:\n          change(state, to_normal, context(rx_role_suf, 4));\n          stream.match(rx_NAME);\n          token = 'keyword';\n          break;\n        case 4:\n          change(state, to_normal, context(rx_role_suf, 5));\n          stream.match(/^:/);\n          token = 'meta';\n          break;\n        case 5:\n          change(state, to_normal, context(rx_role_suf, 6));\n          stream.match(rx_TAIL);\n          break;\n        default:\n          change(state, to_normal);\n        }\n      } else if (phase(state) == rx_role || stream.match(rx_role, false)) {\n\n        switch (stage(state)) {\n        case 0:\n          change(state, to_normal, context(rx_role, 1));\n          stream.match(/^:/);\n          token = 'meta';\n          break;\n        case 1:\n          change(state, to_normal, context(rx_role, 2));\n          stream.match(rx_NAME);\n          token = 'keyword';\n          break;\n        case 2:\n          change(state, to_normal, context(rx_role, 3));\n          stream.match(/^:/);\n          token = 'meta';\n          break;\n        case 3:\n          change(state, to_normal, context(rx_role, 4));\n          stream.match(rx_TAIL);\n          break;\n        default:\n          change(state, to_normal);\n        }\n      } else if (phase(state) == rx_substitution_ref ||\n               stream.match(rx_substitution_ref, false)) {\n\n        switch (stage(state)) {\n        case 0:\n          change(state, to_normal, context(rx_substitution_ref, 1));\n          stream.match(rx_substitution_text);\n          token = 'variable-2';\n          break;\n        case 1:\n          change(state, to_normal, context(rx_substitution_ref, 2));\n          if (stream.match(/^_?_?/)) token = 'link';\n          break;\n        default:\n          change(state, to_normal);\n        }\n      } else if (stream.match(rx_footnote_ref)) {\n        change(state, to_normal);\n        token = 'quote';\n      } else if (stream.match(rx_citation_ref)) {\n        change(state, to_normal);\n        token = 'quote';\n      } else if (stream.match(rx_link_ref1)) {\n        change(state, to_normal);\n        if (!stream.peek() || stream.peek().match(/^\\W$/)) {\n          token = 'link';\n        }\n      } else if (phase(state) == rx_link_ref2 ||\n               stream.match(rx_link_ref2, false)) {\n\n        switch (stage(state)) {\n        case 0:\n          if (!stream.peek() || stream.peek().match(/^\\W$/)) {\n            change(state, to_normal, context(rx_link_ref2, 1));\n          } else {\n            stream.match(rx_link_ref2);\n          }\n          break;\n        case 1:\n          change(state, to_normal, context(rx_link_ref2, 2));\n          stream.match(/^`/);\n          token = 'link';\n          break;\n        case 2:\n          change(state, to_normal, context(rx_link_ref2, 3));\n          stream.match(rx_TEXT2);\n          break;\n        case 3:\n          change(state, to_normal, context(rx_link_ref2, 4));\n          stream.match(/^`_/);\n          token = 'link';\n          break;\n        default:\n          change(state, to_normal);\n        }\n      } else if (stream.match(rx_verbatim)) {\n        change(state, to_verbatim);\n      }\n\n      else {\n        if (stream.next()) change(state, to_normal);\n      }\n\n      return token;\n    }\n\n\n    function to_explicit(stream, state) {\n      var token = null;\n\n      if (phase(state) == rx_substitution ||\n        stream.match(rx_substitution, false)) {\n\n        switch (stage(state)) {\n        case 0:\n          change(state, to_explicit, context(rx_substitution, 1));\n          stream.match(rx_substitution_text);\n          token = 'variable-2';\n          break;\n        case 1:\n          change(state, to_explicit, context(rx_substitution, 2));\n          stream.match(rx_substitution_sepa);\n          break;\n        case 2:\n          change(state, to_explicit, context(rx_substitution, 3));\n          stream.match(rx_substitution_name);\n          token = 'keyword';\n          break;\n        case 3:\n          change(state, to_explicit, context(rx_substitution, 4));\n          stream.match(rx_substitution_tail);\n          token = 'meta';\n          break;\n        default:\n          change(state, to_normal);\n        }\n      } else if (phase(state) == rx_directive ||\n               stream.match(rx_directive, false)) {\n\n        switch (stage(state)) {\n        case 0:\n          change(state, to_explicit, context(rx_directive, 1));\n          stream.match(rx_directive_name);\n          token = 'keyword';\n\n          if (stream.current().match(/^(?:math|latex)/))\n            state.tmp_stex = true;\n          else if (stream.current().match(/^python/))\n            state.tmp_py = true;\n          break;\n        case 1:\n          change(state, to_explicit, context(rx_directive, 2));\n          stream.match(rx_directive_tail);\n          token = 'meta';\n\n          if (stream.match(/^latex\\s*$/) || state.tmp_stex) {\n            state.tmp_stex = undefined; change(state, to_mode, {\n              mode: mode_stex, local: CodeMirror.startState(mode_stex)\n            });\n          }\n          break;\n        case 2:\n          change(state, to_explicit, context(rx_directive, 3));\n          if (stream.match(/^python\\s*$/) || state.tmp_py) {\n            state.tmp_py = undefined; change(state, to_mode, {\n              mode: mode_python, local: CodeMirror.startState(mode_python)\n            });\n          }\n          break;\n        default:\n          change(state, to_normal);\n        }\n      } else if (phase(state) == rx_link || stream.match(rx_link, false)) {\n\n        switch (stage(state)) {\n        case 0:\n          change(state, to_explicit, context(rx_link, 1));\n          stream.match(rx_link_head);\n          stream.match(rx_link_name);\n          token = 'link';\n          break;\n        case 1:\n          change(state, to_explicit, context(rx_link, 2));\n          stream.match(rx_link_tail);\n          token = 'meta';\n          break;\n        default:\n          change(state, to_normal);\n        }\n      } else if (stream.match(rx_footnote)) {\n        change(state, to_normal);\n        token = 'quote';\n      } else if (stream.match(rx_citation)) {\n        change(state, to_normal);\n        token = 'quote';\n      }\n\n      else {\n        stream.eatSpace();\n        if (stream.eol()) {\n          change(state, to_normal);\n        } else {\n          stream.skipToEnd();\n          change(state, to_comment);\n          token = 'comment';\n        }\n      }\n\n      return token;\n    }\n\n\n    function to_comment(stream, state) {\n      return as_block(stream, state, 'comment');\n    }\n\n    function to_verbatim(stream, state) {\n      return as_block(stream, state, 'meta');\n    }\n\n    function as_block(stream, state, token) {\n      if (stream.eol() || stream.eatSpace()) {\n        stream.skipToEnd();\n        return token;\n      } else {\n        change(state, to_normal);\n        return null;\n      }\n    }\n\n\n    function to_mode(stream, state) {\n\n      if (state.ctx.mode && state.ctx.local) {\n\n        if (stream.sol()) {\n          if (!stream.eatSpace()) change(state, to_normal);\n          return null;\n        }\n\n        return state.ctx.mode.token(stream, state.ctx.local);\n      }\n\n      change(state, to_normal);\n      return null;\n    }\n\n\n    function context(phase, stage, mode, local) {\n      return {phase: phase, stage: stage, mode: mode, local: local};\n    }\n\n    function change(state, tok, ctx) {\n      state.tok = tok;\n      state.ctx = ctx || {};\n    }\n\n    function stage(state) {\n      return state.ctx.stage || 0;\n    }\n\n    function phase(state) {\n      return state.ctx.phase;\n    }\n\n\n    return {\n      startState: function () {\n        return {tok: to_normal, ctx: context(undefined, 0)};\n      },\n\n      copyState: function (state) {\n        var ctx = state.ctx, tmp = state.tmp;\n        if (ctx.local)\n          ctx = {mode: ctx.mode, local: CodeMirror.copyState(ctx.mode, ctx.local)};\n        if (tmp)\n          tmp = {mode: tmp.mode, local: CodeMirror.copyState(tmp.mode, tmp.local)};\n        return {tok: state.tok, ctx: ctx, tmp: tmp};\n      },\n\n      innerMode: function (state) {\n        return state.tmp      ? {state: state.tmp.local, mode: state.tmp.mode}\n          : state.ctx.mode ? {state: state.ctx.local, mode: state.ctx.mode}\n            : null;\n      },\n\n      token: function (stream, state) {\n        return state.tok(stream, state);\n      }\n    };\n  }, 'python', 'stex');\n\n\n  CodeMirror.defineMIME('text/x-rst', 'rst');\n\n\n}"],"names":[],"mappings":"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"}