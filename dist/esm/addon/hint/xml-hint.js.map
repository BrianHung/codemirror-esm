{"version":3,"file":"xml-hint.js","sources":["../../../../src/addon/hint/xml-hint.js"],"sourcesContent":["// Source: https://github.com/codemirror/CodeMirror/tree/master/addon/hint/xml-hint.js\nexport default function(CodeMirror) {\n  \"use strict\";\n\n  var Pos = CodeMirror.Pos;\n\n  function matches(hint, typed, matchInMiddle) {\n    if (matchInMiddle) return hint.indexOf(typed) >= 0;\n    else return hint.lastIndexOf(typed, 0) == 0;\n  }\n\n  function getHints(cm, options) {\n    var tags = options && options.schemaInfo;\n    var quote = (options && options.quoteChar) || '\"';\n    var matchInMiddle = options && options.matchInMiddle;\n    if (!tags) return;\n    var cur = cm.getCursor(), token = cm.getTokenAt(cur);\n    if (token.end > cur.ch) {\n      token.end = cur.ch;\n      token.string = token.string.slice(0, cur.ch - token.start);\n    }\n    var inner = CodeMirror.innerMode(cm.getMode(), token.state);\n    if (!inner.mode.xmlCurrentTag) return\n    var result = [], replaceToken = false, prefix;\n    var tag = /\\btag\\b/.test(token.type) && !/>$/.test(token.string);\n    var tagName = tag && /^\\w/.test(token.string), tagStart;\n\n    if (tagName) {\n      var before = cm.getLine(cur.line).slice(Math.max(0, token.start - 2), token.start);\n      var tagType = /<\\/$/.test(before) ? \"close\" : /<$/.test(before) ? \"open\" : null;\n      if (tagType) tagStart = token.start - (tagType == \"close\" ? 2 : 1);\n    } else if (tag && token.string == \"<\") {\n      tagType = \"open\";\n    } else if (tag && token.string == \"</\") {\n      tagType = \"close\";\n    }\n\n    var tagInfo = inner.mode.xmlCurrentTag(inner.state)\n    if (!tag && !tagInfo || tagType) {\n      if (tagName)\n        prefix = token.string;\n      replaceToken = tagType;\n      var context = inner.mode.xmlCurrentContext ? inner.mode.xmlCurrentContext(inner.state) : []\n      var inner = context.length && context[context.length - 1]\n      var curTag = inner && tags[inner]\n      var childList = inner ? curTag && curTag.children : tags[\"!top\"];\n      if (childList && tagType != \"close\") {\n        for (var i = 0; i < childList.length; ++i) if (!prefix || matches(childList[i], prefix, matchInMiddle))\n          result.push(\"<\" + childList[i]);\n      } else if (tagType != \"close\") {\n        for (var name in tags)\n          if (tags.hasOwnProperty(name) && name != \"!top\" && name != \"!attrs\" && (!prefix || matches(name, prefix, matchInMiddle)))\n            result.push(\"<\" + name);\n      }\n      if (inner && (!prefix || tagType == \"close\" && matches(inner, prefix, matchInMiddle)))\n        result.push(\"</\" + inner + \">\");\n    } else {\n      var curTag = tagInfo && tags[tagInfo.name], attrs = curTag && curTag.attrs;\n      var globalAttrs = tags[\"!attrs\"];\n      if (!attrs && !globalAttrs) return;\n      if (!attrs) {\n        attrs = globalAttrs;\n      } else if (globalAttrs) { \n        var set = {};\n        for (var nm in globalAttrs) if (globalAttrs.hasOwnProperty(nm)) set[nm] = globalAttrs[nm];\n        for (var nm in attrs) if (attrs.hasOwnProperty(nm)) set[nm] = attrs[nm];\n        attrs = set;\n      }\n      if (token.type == \"string\" || token.string == \"=\") { \n        var before = cm.getRange(Pos(cur.line, Math.max(0, cur.ch - 60)),\n          Pos(cur.line, token.type == \"string\" ? token.start : token.end));\n        var atName = before.match(/([^\\s\\u00a0=<>\\\"\\']+)=$/), atValues;\n        if (!atName || !attrs.hasOwnProperty(atName[1]) || !(atValues = attrs[atName[1]])) return;\n        if (typeof atValues == 'function') atValues = atValues.call(this, cm); \n        if (token.type == \"string\") {\n          prefix = token.string;\n          var n = 0;\n          if (/['\"]/.test(token.string.charAt(0))) {\n            quote = token.string.charAt(0);\n            prefix = token.string.slice(1);\n            n++;\n          }\n          var len = token.string.length;\n          if (/['\"]/.test(token.string.charAt(len - 1))) {\n            quote = token.string.charAt(len - 1);\n            prefix = token.string.substr(n, len - 2);\n          }\n          if (n) { \n            var line = cm.getLine(cur.line);\n            if (line.length > token.end && line.charAt(token.end) == quote) token.end++; \n          }\n          replaceToken = true;\n        }\n        var returnHintsFromAtValues = function(atValues) {\n          if (atValues)\n            for (var i = 0; i < atValues.length; ++i) if (!prefix || matches(atValues[i], prefix, matchInMiddle))\n              result.push(quote + atValues[i] + quote);\n          return returnHints();\n        };\n        if (atValues && atValues.then) return atValues.then(returnHintsFromAtValues);\n        return returnHintsFromAtValues(atValues);\n      } else { \n        if (token.type == \"attribute\") {\n          prefix = token.string;\n          replaceToken = true;\n        }\n        for (var attr in attrs) if (attrs.hasOwnProperty(attr) && (!prefix || matches(attr, prefix, matchInMiddle)))\n          result.push(attr);\n      }\n    }\n    function returnHints() {\n      return {\n        list: result,\n        from: replaceToken ? Pos(cur.line, tagStart == null ? token.start : tagStart) : cur,\n        to: replaceToken ? Pos(cur.line, token.end) : cur\n      };\n    }\n    return returnHints();\n  }\n\n  CodeMirror.registerHelper(\"hint\", \"xml\", getHints);\n}"],"names":[],"mappings":"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"}