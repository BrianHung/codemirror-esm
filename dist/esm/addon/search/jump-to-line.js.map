{"version":3,"file":"jump-to-line.js","sources":["../../../../src/addon/search/jump-to-line.js"],"sourcesContent":["// Source: https://github.com/codemirror/CodeMirror/tree/master/addon/search/jump-to-line.js\nimport dialog from \"../dialog/dialog\"\nexport default function(CodeMirror) {\n  dialog(CodeMirror)\n  \"use strict\";\n\n  CodeMirror.defineOption(\"search\", {bottom: false});\n\n  function dialog(cm, text, shortText, deflt, f) {\n    if (cm.openDialog) cm.openDialog(text, f, {value: deflt, selectValueOnOpen: true, bottom: cm.options.search.bottom});\n    else f(prompt(shortText, deflt));\n  }\n\n  function getJumpDialog(cm) {\n    return cm.phrase(\"Jump to line:\") + ' <input type=\"text\" style=\"width: 10em\" class=\"CodeMirror-search-field\"/> <span style=\"color: #888\" class=\"CodeMirror-search-hint\">' + cm.phrase(\"(Use line:column or scroll% syntax)\") + '</span>';\n  }\n\n  function interpretLine(cm, string) {\n    var num = Number(string)\n    if (/^[-+]/.test(string)) return cm.getCursor().line + num\n    else return num - 1\n  }\n\n  CodeMirror.commands.jumpToLine = function(cm) {\n    var cur = cm.getCursor();\n    dialog(cm, getJumpDialog(cm), cm.phrase(\"Jump to line:\"), (cur.line + 1) + \":\" + cur.ch, function(posStr) {\n      if (!posStr) return;\n\n      var match;\n      if (match = /^\\s*([\\+\\-]?\\d+)\\s*\\:\\s*(\\d+)\\s*$/.exec(posStr)) {\n        cm.setCursor(interpretLine(cm, match[1]), Number(match[2]))\n      } else if (match = /^\\s*([\\+\\-]?\\d+(\\.\\d+)?)\\%\\s*/.exec(posStr)) {\n        var line = Math.round(cm.lineCount() * Number(match[1]) / 100);\n        if (/^[-+]/.test(match[1])) line = cur.line + line + 1;\n        cm.setCursor(line - 1, cur.ch);\n      } else if (match = /^\\s*\\:?\\s*([\\+\\-]?\\d+)\\s*/.exec(posStr)) {\n        cm.setCursor(interpretLine(cm, match[1]), cur.ch);\n      }\n    });\n  };\n\n  CodeMirror.keyMap[\"default\"][\"Alt-G\"] = \"jumpToLine\";\n}"],"names":[],"mappings":"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"}