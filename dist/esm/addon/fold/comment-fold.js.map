{"version":3,"file":"comment-fold.js","sources":["../../../../src/addon/fold/comment-fold.js"],"sourcesContent":["// Source: https://github.com/codemirror/CodeMirror/tree/master/addon/fold/comment-fold.js\nexport default function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.registerGlobalHelper(\"fold\", \"comment\", function(mode) {\n    return mode.blockCommentStart && mode.blockCommentEnd;\n  }, function(cm, start) {\n    var mode = cm.getModeAt(start), startToken = mode.blockCommentStart, endToken = mode.blockCommentEnd;\n    if (!startToken || !endToken) return;\n    var line = start.line, lineText = cm.getLine(line);\n\n    var startCh;\n    for (var at = start.ch, pass = 0;;) {\n      var found = at <= 0 ? -1 : lineText.lastIndexOf(startToken, at - 1);\n      if (found == -1) {\n        if (pass == 1) return;\n        pass = 1;\n        at = lineText.length;\n        continue;\n      }\n      if (pass == 1 && found < start.ch) return;\n      if (/comment/.test(cm.getTokenTypeAt(CodeMirror.Pos(line, found + 1))) &&\n        (found == 0 || lineText.slice(found - endToken.length, found) == endToken ||\n         !/comment/.test(cm.getTokenTypeAt(CodeMirror.Pos(line, found))))) {\n        startCh = found + startToken.length;\n        break;\n      }\n      at = found - 1;\n    }\n\n    var depth = 1, lastLine = cm.lastLine(), end, endCh;\n    outer: for (var i = line; i <= lastLine; ++i) {\n      var text = cm.getLine(i), pos = i == line ? startCh : 0;\n      for (;;) {\n        var nextOpen = text.indexOf(startToken, pos), nextClose = text.indexOf(endToken, pos);\n        if (nextOpen < 0) nextOpen = text.length;\n        if (nextClose < 0) nextClose = text.length;\n        pos = Math.min(nextOpen, nextClose);\n        if (pos == text.length) break;\n        if (pos == nextOpen) ++depth;\n        else if (!--depth) { end = i; endCh = pos; break outer; }\n        ++pos;\n      }\n    }\n    if (end == null || line == end && endCh == startCh) return;\n    return {from: CodeMirror.Pos(line, startCh),\n      to: CodeMirror.Pos(end, endCh)};\n  });\n\n}"],"names":[],"mappings":"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"}