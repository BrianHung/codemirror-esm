{"version":3,"file":"brace-fold.js","sources":["../../../../src/addon/fold/brace-fold.js"],"sourcesContent":["// Source: https://github.com/codemirror/CodeMirror/tree/master/addon/fold/brace-fold.js\nexport default function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.registerHelper(\"fold\", \"brace\", function(cm, start) {\n    var line = start.line, lineText = cm.getLine(line);\n    var tokenType;\n\n    function findOpening(openCh) {\n      for (var at = start.ch, pass = 0;;) {\n        var found = at <= 0 ? -1 : lineText.lastIndexOf(openCh, at - 1);\n        if (found == -1) {\n          if (pass == 1) break;\n          pass = 1;\n          at = lineText.length;\n          continue;\n        }\n        if (pass == 1 && found < start.ch) break;\n        tokenType = cm.getTokenTypeAt(CodeMirror.Pos(line, found + 1));\n        if (!/^(comment|string)/.test(tokenType)) return found + 1;\n        at = found - 1;\n      }\n    }\n\n    var startToken = \"{\", endToken = \"}\", startCh = findOpening(\"{\");\n    if (startCh == null) {\n      startToken = \"[\", endToken = \"]\";\n      startCh = findOpening(\"[\");\n    }\n\n    if (startCh == null) return;\n    var count = 1, lastLine = cm.lastLine(), end, endCh;\n    outer: for (var i = line; i <= lastLine; ++i) {\n      var text = cm.getLine(i), pos = i == line ? startCh : 0;\n      for (;;) {\n        var nextOpen = text.indexOf(startToken, pos), nextClose = text.indexOf(endToken, pos);\n        if (nextOpen < 0) nextOpen = text.length;\n        if (nextClose < 0) nextClose = text.length;\n        pos = Math.min(nextOpen, nextClose);\n        if (pos == text.length) break;\n        if (cm.getTokenTypeAt(CodeMirror.Pos(i, pos + 1)) == tokenType) {\n          if (pos == nextOpen) ++count;\n          else if (!--count) { end = i; endCh = pos; break outer; }\n        }\n        ++pos;\n      }\n    }\n    if (end == null || line == end) return;\n    return {from: CodeMirror.Pos(line, startCh),\n      to: CodeMirror.Pos(end, endCh)};\n  });\n\n  CodeMirror.registerHelper(\"fold\", \"import\", function(cm, start) {\n    function hasImport(line) {\n      if (line < cm.firstLine() || line > cm.lastLine()) return null;\n      var start = cm.getTokenAt(CodeMirror.Pos(line, 1));\n      if (!/\\S/.test(start.string)) start = cm.getTokenAt(CodeMirror.Pos(line, start.end + 1));\n      if (start.type != \"keyword\" || start.string != \"import\") return null;\n      for (var i = line, e = Math.min(cm.lastLine(), line + 10); i <= e; ++i) {\n        var text = cm.getLine(i), semi = text.indexOf(\";\");\n        if (semi != -1) return {startCh: start.end, end: CodeMirror.Pos(i, semi)};\n      }\n    }\n\n    var startLine = start.line, has = hasImport(startLine), prev;\n    if (!has || hasImport(startLine - 1) || ((prev = hasImport(startLine - 2)) && prev.end.line == startLine - 1))\n      return null;\n    for (var end = has.end;;) {\n      var next = hasImport(end.line + 1);\n      if (next == null) break;\n      end = next.end;\n    }\n    return {from: cm.clipPos(CodeMirror.Pos(startLine, has.startCh + 1)), to: end};\n  });\n\n  CodeMirror.registerHelper(\"fold\", \"include\", function(cm, start) {\n    function hasInclude(line) {\n      if (line < cm.firstLine() || line > cm.lastLine()) return null;\n      var start = cm.getTokenAt(CodeMirror.Pos(line, 1));\n      if (!/\\S/.test(start.string)) start = cm.getTokenAt(CodeMirror.Pos(line, start.end + 1));\n      if (start.type == \"meta\" && start.string.slice(0, 8) == \"#include\") return start.start + 8;\n    }\n\n    var startLine = start.line, has = hasInclude(startLine);\n    if (has == null || hasInclude(startLine - 1) != null) return null;\n    for (var end = startLine;;) {\n      var next = hasInclude(end + 1);\n      if (next == null) break;\n      ++end;\n    }\n    return {from: CodeMirror.Pos(startLine, has + 1),\n      to: cm.clipPos(CodeMirror.Pos(end))};\n  });\n\n}"],"names":[],"mappings":"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"}