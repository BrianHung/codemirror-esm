{"version":3,"file":"coffeescript.js","sources":["../../../../src/mode/coffeescript/coffeescript.js"],"sourcesContent":["// Source: https://github.com/codemirror/CodeMirror/tree/master/mode/coffeescript/coffeescript.js\nexport default function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"coffeescript\", function(conf, parserConf) {\n    var ERRORCLASS = \"error\";\n\n    function wordRegexp(words) {\n      return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n    }\n\n    var operators = /^(?:->|=>|\\+[+=]?|-[\\-=]?|\\*[\\*=]?|\\/[\\/=]?|[=!]=|<[><]?=?|>>?=?|%=?|&=?|\\|=?|\\^=?|\\~|!|\\?|(or|and|\\|\\||&&|\\?)=)/;\n    var delimiters = /^(?:[()\\[\\]{},:`=;]|\\.\\.?\\.?)/;\n    var identifiers = /^[_A-Za-z$][_A-Za-z$0-9]*/;\n    var atProp = /^@[_A-Za-z$][_A-Za-z$0-9]*/;\n\n    var wordOperators = wordRegexp([\"and\", \"or\", \"not\",\n      \"is\", \"isnt\", \"in\",\n      \"instanceof\", \"typeof\"]);\n    var indentKeywords = [\"for\", \"while\", \"loop\", \"if\", \"unless\", \"else\",\n      \"switch\", \"try\", \"catch\", \"finally\", \"class\"];\n    var commonKeywords = [\"break\", \"by\", \"continue\", \"debugger\", \"delete\",\n      \"do\", \"in\", \"of\", \"new\", \"return\", \"then\",\n      \"this\", \"@\", \"throw\", \"when\", \"until\", \"extends\"];\n\n    var keywords = wordRegexp(indentKeywords.concat(commonKeywords));\n\n    indentKeywords = wordRegexp(indentKeywords);\n\n\n    var stringPrefixes = /^('{3}|\\\"{3}|['\\\"])/;\n    var regexPrefixes = /^(\\/{3}|\\/)/;\n    var commonConstants = [\"Infinity\", \"NaN\", \"undefined\", \"null\", \"true\", \"false\", \"on\", \"off\", \"yes\", \"no\"];\n    var constants = wordRegexp(commonConstants);\n\n    function tokenBase(stream, state) {\n      if (stream.sol()) {\n        if (state.scope.align === null) state.scope.align = false;\n        var scopeOffset = state.scope.offset;\n        if (stream.eatSpace()) {\n          var lineOffset = stream.indentation();\n          if (lineOffset > scopeOffset && state.scope.type == \"coffee\") {\n            return \"indent\";\n          } else if (lineOffset < scopeOffset) {\n            return \"dedent\";\n          }\n          return null;\n        } else {\n          if (scopeOffset > 0) {\n            dedent(stream, state);\n          }\n        }\n      }\n      if (stream.eatSpace()) {\n        return null;\n      }\n\n      var ch = stream.peek();\n\n      if (stream.match(\"####\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n\n      if (stream.match(\"###\")) {\n        state.tokenize = longComment;\n        return state.tokenize(stream, state);\n      }\n\n      if (ch === \"#\") {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n\n      if (stream.match(/^-?[0-9\\.]/, false)) {\n        var floatLiteral = false;\n        if (stream.match(/^-?\\d*\\.\\d+(e[\\+\\-]?\\d+)?/i)) {\n          floatLiteral = true;\n        }\n        if (stream.match(/^-?\\d+\\.\\d*/)) {\n          floatLiteral = true;\n        }\n        if (stream.match(/^-?\\.\\d+/)) {\n          floatLiteral = true;\n        }\n\n        if (floatLiteral) {\n          if (stream.peek() == \".\"){\n            stream.backUp(1);\n          }\n          return \"number\";\n        }\n        var intLiteral = false;\n        if (stream.match(/^-?0x[0-9a-f]+/i)) {\n          intLiteral = true;\n        }\n        if (stream.match(/^-?[1-9]\\d*(e[\\+\\-]?\\d+)?/)) {\n          intLiteral = true;\n        }\n        if (stream.match(/^-?0(?![\\dx])/i)) {\n          intLiteral = true;\n        }\n        if (intLiteral) {\n          return \"number\";\n        }\n      }\n\n      if (stream.match(stringPrefixes)) {\n        state.tokenize = tokenFactory(stream.current(), false, \"string\");\n        return state.tokenize(stream, state);\n      }\n      if (stream.match(regexPrefixes)) {\n        if (stream.current() != \"/\" || stream.match(/^.*\\//, false)) { \n          state.tokenize = tokenFactory(stream.current(), true, \"string-2\");\n          return state.tokenize(stream, state);\n        } else {\n          stream.backUp(1);\n        }\n      }\n\n\n\n      if (stream.match(operators) || stream.match(wordOperators)) {\n        return \"operator\";\n      }\n      if (stream.match(delimiters)) {\n        return \"punctuation\";\n      }\n\n      if (stream.match(constants)) {\n        return \"atom\";\n      }\n\n      if (stream.match(atProp) || state.prop && stream.match(identifiers)) {\n        return \"property\";\n      }\n\n      if (stream.match(keywords)) {\n        return \"keyword\";\n      }\n\n      if (stream.match(identifiers)) {\n        return \"variable\";\n      }\n\n      stream.next();\n      return ERRORCLASS;\n    }\n\n    function tokenFactory(delimiter, singleline, outclass) {\n      return function(stream, state) {\n        while (!stream.eol()) {\n          stream.eatWhile(/[^'\"\\/\\\\]/);\n          if (stream.eat(\"\\\\\")) {\n            stream.next();\n            if (singleline && stream.eol()) {\n              return outclass;\n            }\n          } else if (stream.match(delimiter)) {\n            state.tokenize = tokenBase;\n            return outclass;\n          } else {\n            stream.eat(/['\"\\/]/);\n          }\n        }\n        if (singleline) {\n          if (parserConf.singleLineStringErrors) {\n            outclass = ERRORCLASS;\n          } else {\n            state.tokenize = tokenBase;\n          }\n        }\n        return outclass;\n      };\n    }\n\n    function longComment(stream, state) {\n      while (!stream.eol()) {\n        stream.eatWhile(/[^#]/);\n        if (stream.match(\"###\")) {\n          state.tokenize = tokenBase;\n          break;\n        }\n        stream.eatWhile(\"#\");\n      }\n      return \"comment\";\n    }\n\n    function indent(stream, state, type) {\n      type = type || \"coffee\";\n      var offset = 0, align = false, alignOffset = null;\n      for (var scope = state.scope; scope; scope = scope.prev) {\n        if (scope.type === \"coffee\" || scope.type == \"}\") {\n          offset = scope.offset + conf.indentUnit;\n          break;\n        }\n      }\n      if (type !== \"coffee\") {\n        align = null;\n        alignOffset = stream.column() + stream.current().length;\n      } else if (state.scope.align) {\n        state.scope.align = false;\n      }\n      state.scope = {\n        offset: offset,\n        type: type,\n        prev: state.scope,\n        align: align,\n        alignOffset: alignOffset\n      };\n    }\n\n    function dedent(stream, state) {\n      if (!state.scope.prev) return;\n      if (state.scope.type === \"coffee\") {\n        var _indent = stream.indentation();\n        var matched = false;\n        for (var scope = state.scope; scope; scope = scope.prev) {\n          if (_indent === scope.offset) {\n            matched = true;\n            break;\n          }\n        }\n        if (!matched) {\n          return true;\n        }\n        while (state.scope.prev && state.scope.offset !== _indent) {\n          state.scope = state.scope.prev;\n        }\n        return false;\n      } else {\n        state.scope = state.scope.prev;\n        return false;\n      }\n    }\n\n    function tokenLexer(stream, state) {\n      var style = state.tokenize(stream, state);\n      var current = stream.current();\n\n      if (current === \"return\") {\n        state.dedent = true;\n      }\n      if (((current === \"->\" || current === \"=>\") && stream.eol())\n        || style === \"indent\") {\n        indent(stream, state);\n      }\n      var delimiter_index = \"[({\".indexOf(current);\n      if (delimiter_index !== -1) {\n        indent(stream, state, \"])}\".slice(delimiter_index, delimiter_index+1));\n      }\n      if (indentKeywords.exec(current)){\n        indent(stream, state);\n      }\n      if (current == \"then\"){\n        dedent(stream, state);\n      }\n\n\n      if (style === \"dedent\") {\n        if (dedent(stream, state)) {\n          return ERRORCLASS;\n        }\n      }\n      delimiter_index = \"])}\".indexOf(current);\n      if (delimiter_index !== -1) {\n        while (state.scope.type == \"coffee\" && state.scope.prev)\n          state.scope = state.scope.prev;\n        if (state.scope.type == current)\n          state.scope = state.scope.prev;\n      }\n      if (state.dedent && stream.eol()) {\n        if (state.scope.type == \"coffee\" && state.scope.prev)\n          state.scope = state.scope.prev;\n        state.dedent = false;\n      }\n\n      return style;\n    }\n\n    var external = {\n      startState: function(basecolumn) {\n        return {\n          tokenize: tokenBase,\n          scope: {offset:basecolumn || 0, type:\"coffee\", prev: null, align: false},\n          prop: false,\n          dedent: 0\n        };\n      },\n\n      token: function(stream, state) {\n        var fillAlign = state.scope.align === null && state.scope;\n        if (fillAlign && stream.sol()) fillAlign.align = false;\n\n        var style = tokenLexer(stream, state);\n        if (style && style != \"comment\") {\n          if (fillAlign) fillAlign.align = true;\n          state.prop = style == \"punctuation\" && stream.current() == \".\"\n        }\n\n        return style;\n      },\n\n      indent: function(state, text) {\n        if (state.tokenize != tokenBase) return 0;\n        var scope = state.scope;\n        var closer = text && \"])}\".indexOf(text.charAt(0)) > -1;\n        if (closer) while (scope.type == \"coffee\" && scope.prev) scope = scope.prev;\n        var closes = closer && scope.type === text.charAt(0);\n        if (scope.align)\n          return scope.alignOffset - (closes ? 1 : 0);\n        else\n          return (closes ? scope.prev : scope).offset;\n      },\n\n      lineComment: \"#\",\n      fold: \"indent\"\n    };\n    return external;\n  });\n\n  CodeMirror.defineMIME(\"application/vnd.coffeescript\", \"coffeescript\");\n\n  CodeMirror.defineMIME(\"text/x-coffeescript\", \"coffeescript\");\n  CodeMirror.defineMIME(\"text/coffeescript\", \"coffeescript\");\n\n}"],"names":[],"mappings":"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"}