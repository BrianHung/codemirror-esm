{"version":3,"file":"protobuf.js","sources":["../../../../src/mode/protobuf/protobuf.js"],"sourcesContent":["// Source: https://github.com/codemirror/CodeMirror/tree/master/mode/protobuf/protobuf.js\nexport default function(CodeMirror) {\n  \"use strict\";\n\n  function wordRegexp(words) {\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\", \"i\");\n  };\n\n  var keywordArray = [\n    \"package\", \"message\", \"import\", \"syntax\",\n    \"required\", \"optional\", \"repeated\", \"reserved\", \"default\", \"extensions\", \"packed\",\n    \"bool\", \"bytes\", \"double\", \"enum\", \"float\", \"string\",\n    \"int32\", \"int64\", \"uint32\", \"uint64\", \"sint32\", \"sint64\", \"fixed32\", \"fixed64\", \"sfixed32\", \"sfixed64\",\n    \"option\", \"service\", \"rpc\", \"returns\"\n  ];\n  var keywords = wordRegexp(keywordArray);\n\n  CodeMirror.registerHelper(\"hintWords\", \"protobuf\", keywordArray);\n\n  var identifiers = new RegExp(\"^[_A-Za-z\\xa1-\\uffff][_A-Za-z0-9\\xa1-\\uffff]*\");\n\n  function tokenBase(stream) {\n    if (stream.eatSpace()) return null;\n\n    if (stream.match(\"//\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    if (stream.match(/^[0-9\\.+-]/, false)) {\n      if (stream.match(/^[+-]?0x[0-9a-fA-F]+/))\n        return \"number\";\n      if (stream.match(/^[+-]?\\d*\\.\\d+([EeDd][+-]?\\d+)?/))\n        return \"number\";\n      if (stream.match(/^[+-]?\\d+([EeDd][+-]?\\d+)?/))\n        return \"number\";\n    }\n\n    if (stream.match(/^\"([^\"]|(\"\"))*\"/)) { return \"string\"; }\n    if (stream.match(/^'([^']|(''))*'/)) { return \"string\"; }\n\n    if (stream.match(keywords)) { return \"keyword\"; }\n    if (stream.match(identifiers)) { return \"variable\"; } ;\n\n    stream.next();\n    return null;\n  };\n\n  CodeMirror.defineMode(\"protobuf\", function() {\n    return {\n      token: tokenBase,\n      fold: \"brace\"\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-protobuf\", \"protobuf\");\n}"],"names":[],"mappings":";;AAAA;AACe,kBAAS,UAAU,EAAE;AAEpC;AACA,EAAE,SAAS,UAAU,CAAC,KAAK,EAAE;AAC7B,IAAI,OAAO,IAAI,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,OAAO,EAAE,GAAG,CAAC,CAAC;AAChE,GACA;AACA,EAAE,IAAI,YAAY,GAAG;AACrB,IAAI,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ;AAC5C,IAAI,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,YAAY,EAAE,QAAQ;AACrF,IAAI,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ;AACxD,IAAI,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU;AAC1G,IAAI,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS;AACzC,GAAG,CAAC;AACJ,EAAE,IAAI,QAAQ,GAAG,UAAU,CAAC,YAAY,CAAC,CAAC;AAC1C;AACA,EAAE,UAAU,CAAC,cAAc,CAAC,WAAW,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC;AACnE;AACA,EAAE,IAAI,WAAW,GAAG,IAAI,MAAM,CAAC,+CAA+C,CAAC,CAAC;AAChF;AACA,EAAE,SAAS,SAAS,CAAC,MAAM,EAAE;AAC7B,IAAI,IAAI,MAAM,CAAC,QAAQ,EAAE,IAAE,OAAO,IAAI,GAAC;AACvC;AACA,IAAI,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;AAC5B,MAAM,MAAM,CAAC,SAAS,EAAE,CAAC;AACzB,MAAM,OAAO,SAAS,CAAC;AACvB,KAAK;AACL;AACA,IAAI,IAAI,MAAM,CAAC,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,EAAE;AAC3C,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,sBAAsB,CAAC;AAC9C,UAAQ,OAAO,QAAQ,GAAC;AACxB,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,iCAAiC,CAAC;AACzD,UAAQ,OAAO,QAAQ,GAAC;AACxB,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,4BAA4B,CAAC;AACpD,UAAQ,OAAO,QAAQ,GAAC;AACxB,KAAK;AACL;AACA,IAAI,IAAI,MAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,EAAE,EAAE,OAAO,QAAQ,CAAC,EAAE;AAC7D,IAAI,IAAI,MAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,EAAE,EAAE,OAAO,QAAQ,CAAC,EAAE;AAC7D;AACA,IAAI,IAAI,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAE,OAAO,SAAS,CAAC,EAAE;AACrD,IAAI,IAAI,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,EAAE,OAAO,UAAU,CAAC,EACvD;AACA,IAAI,MAAM,CAAC,IAAI,EAAE,CAAC;AAClB,IAAI,OAAO,IAAI,CAAC;AAChB,GACA;AACA,EAAE,UAAU,CAAC,UAAU,CAAC,UAAU,EAAE,WAAW;AAC/C,IAAI,OAAO;AACX,MAAM,KAAK,EAAE,SAAS;AACtB,MAAM,IAAI,EAAE,OAAO;AACnB,KAAK,CAAC;AACN,GAAG,CAAC,CAAC;AACL;AACA,EAAE,UAAU,CAAC,UAAU,CAAC,iBAAiB,EAAE,UAAU,CAAC,CAAC;AACvD;;;;"}