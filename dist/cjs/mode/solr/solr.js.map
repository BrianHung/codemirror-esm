{"version":3,"file":"solr.js","sources":["../../../../src/mode/solr/solr.js"],"sourcesContent":["// Source: https://github.com/codemirror/CodeMirror/tree/master/mode/solr/solr.js\nexport default function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"solr\", function() {\n    \"use strict\";\n\n    var isStringChar = /[^\\s\\|\\!\\+\\-\\*\\?\\~\\^\\&\\:\\(\\)\\[\\]\\{\\}\\\"\\\\]/;\n    var isOperatorChar = /[\\|\\!\\+\\-\\*\\?\\~\\^\\&]/;\n    var isOperatorString = /^(OR|AND|NOT|TO)$/i;\n\n    function isNumber(word) {\n      return parseFloat(word).toString() === word;\n    }\n\n    function tokenString(quote) {\n      return function(stream, state) {\n        var escaped = false, next;\n        while ((next = stream.next()) != null) {\n          if (next == quote && !escaped) break;\n          escaped = !escaped && next == \"\\\\\";\n        }\n\n        if (!escaped) state.tokenize = tokenBase;\n        return \"string\";\n      };\n    }\n\n    function tokenOperator(operator) {\n      return function(stream, state) {\n        var style = \"operator\";\n        if (operator == \"+\")\n          style += \" positive\";\n        else if (operator == \"-\")\n          style += \" negative\";\n        else if (operator == \"|\")\n          stream.eat(/\\|/);\n        else if (operator == \"&\")\n          stream.eat(/\\&/);\n        else if (operator == \"^\")\n          style += \" boost\";\n\n        state.tokenize = tokenBase;\n        return style;\n      };\n    }\n\n    function tokenWord(ch) {\n      return function(stream, state) {\n        var word = ch;\n        while ((ch = stream.peek()) && ch.match(isStringChar) != null) {\n          word += stream.next();\n        }\n\n        state.tokenize = tokenBase;\n        if (isOperatorString.test(word))\n          return \"operator\";\n        else if (isNumber(word))\n          return \"number\";\n        else if (stream.peek() == \":\")\n          return \"field\";\n        else\n          return \"string\";\n      };\n    }\n\n    function tokenBase(stream, state) {\n      var ch = stream.next();\n      if (ch == '\"')\n        state.tokenize = tokenString(ch);\n      else if (isOperatorChar.test(ch))\n        state.tokenize = tokenOperator(ch);\n      else if (isStringChar.test(ch))\n        state.tokenize = tokenWord(ch);\n\n      return (state.tokenize != tokenBase) ? state.tokenize(stream, state) : null;\n    }\n\n    return {\n      startState: function() {\n        return {\n          tokenize: tokenBase\n        };\n      },\n\n      token: function(stream, state) {\n        if (stream.eatSpace()) return null;\n        return state.tokenize(stream, state);\n      }\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-solr\", \"solr\");\n\n}"],"names":[],"mappings":";;AAAA;AACe,cAAS,UAAU,EAAE;AAEpC;AACA,EAAE,UAAU,CAAC,UAAU,CAAC,MAAM,EAAE,WAAW;AAE3C;AACA,IAAI,IAAI,YAAY,GAAG,2CAA2C,CAAC;AACnE,IAAI,IAAI,cAAc,GAAG,sBAAsB,CAAC;AAChD,IAAI,IAAI,gBAAgB,GAAG,oBAAoB,CAAC;AAChD;AACA,IAAI,SAAS,QAAQ,CAAC,IAAI,EAAE;AAC5B,MAAM,OAAO,UAAU,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC;AAClD,KAAK;AACL;AACA,IAAI,SAAS,WAAW,CAAC,KAAK,EAAE;AAChC,MAAM,OAAO,SAAS,MAAM,EAAE,KAAK,EAAE;AACrC,QAAQ,IAAI,OAAO,GAAG,KAAK,EAAE,IAAI,CAAC;AAClC,QAAQ,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,EAAE,KAAK,IAAI,EAAE;AAC/C,UAAU,IAAI,IAAI,IAAI,KAAK,IAAI,CAAC,OAAO,IAAE,QAAM;AAC/C,UAAU,OAAO,GAAG,CAAC,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC;AAC7C,SAAS;AACT;AACA,QAAQ,IAAI,CAAC,OAAO,IAAE,KAAK,CAAC,QAAQ,GAAG,SAAS,GAAC;AACjD,QAAQ,OAAO,QAAQ,CAAC;AACxB,OAAO,CAAC;AACR,KAAK;AACL;AACA,IAAI,SAAS,aAAa,CAAC,QAAQ,EAAE;AACrC,MAAM,OAAO,SAAS,MAAM,EAAE,KAAK,EAAE;AACrC,QAAQ,IAAI,KAAK,GAAG,UAAU,CAAC;AAC/B,QAAQ,IAAI,QAAQ,IAAI,GAAG;AAC3B,YAAU,KAAK,IAAI,WAAW,GAAC;AAC/B,aAAa,IAAI,QAAQ,IAAI,GAAG;AAChC,YAAU,KAAK,IAAI,WAAW,GAAC;AAC/B,aAAa,IAAI,QAAQ,IAAI,GAAG;AAChC,YAAU,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAC;AAC3B,aAAa,IAAI,QAAQ,IAAI,GAAG;AAChC,YAAU,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAC;AAC3B,aAAa,IAAI,QAAQ,IAAI,GAAG;AAChC,YAAU,KAAK,IAAI,QAAQ,GAAC;AAC5B;AACA,QAAQ,KAAK,CAAC,QAAQ,GAAG,SAAS,CAAC;AACnC,QAAQ,OAAO,KAAK,CAAC;AACrB,OAAO,CAAC;AACR,KAAK;AACL;AACA,IAAI,SAAS,SAAS,CAAC,EAAE,EAAE;AAC3B,MAAM,OAAO,SAAS,MAAM,EAAE,KAAK,EAAE;AACrC,QAAQ,IAAI,IAAI,GAAG,EAAE,CAAC;AACtB,QAAQ,OAAO,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,IAAI,EAAE;AACvE,UAAU,IAAI,IAAI,MAAM,CAAC,IAAI,EAAE,CAAC;AAChC,SAAS;AACT;AACA,QAAQ,KAAK,CAAC,QAAQ,GAAG,SAAS,CAAC;AACnC,QAAQ,IAAI,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC;AACvC,YAAU,OAAO,UAAU,GAAC;AAC5B,aAAa,IAAI,QAAQ,CAAC,IAAI,CAAC;AAC/B,YAAU,OAAO,QAAQ,GAAC;AAC1B,aAAa,IAAI,MAAM,CAAC,IAAI,EAAE,IAAI,GAAG;AACrC,YAAU,OAAO,OAAO,GAAC;AACzB;AACA,YAAU,OAAO,QAAQ,GAAC;AAC1B,OAAO,CAAC;AACR,KAAK;AACL;AACA,IAAI,SAAS,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE;AACtC,MAAM,IAAI,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;AAC7B,MAAM,IAAI,EAAE,IAAI,GAAG;AACnB,UAAQ,KAAK,CAAC,QAAQ,GAAG,WAAW,CAAC,EAAE,CAAC,GAAC;AACzC,WAAW,IAAI,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC;AACtC,UAAQ,KAAK,CAAC,QAAQ,GAAG,aAAa,CAAC,EAAE,CAAC,GAAC;AAC3C,WAAW,IAAI,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC;AACpC,UAAQ,KAAK,CAAC,QAAQ,GAAG,SAAS,CAAC,EAAE,CAAC,GAAC;AACvC;AACA,MAAM,OAAO,CAAC,KAAK,CAAC,QAAQ,IAAI,SAAS,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC;AAClF,KAAK;AACL;AACA,IAAI,OAAO;AACX,MAAM,UAAU,EAAE,WAAW;AAC7B,QAAQ,OAAO;AACf,UAAU,QAAQ,EAAE,SAAS;AAC7B,SAAS,CAAC;AACV,OAAO;AACP;AACA,MAAM,KAAK,EAAE,SAAS,MAAM,EAAE,KAAK,EAAE;AACrC,QAAQ,IAAI,MAAM,CAAC,QAAQ,EAAE,IAAE,OAAO,IAAI,GAAC;AAC3C,QAAQ,OAAO,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC7C,OAAO;AACP,KAAK,CAAC;AACN,GAAG,CAAC,CAAC;AACL;AACA,EAAE,UAAU,CAAC,UAAU,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;AAC/C;AACA;;;;"}